Nonterminals useless in grammar

    ids
    types
    arrayIndex
    fieldAccess


Terminals unused in grammar

    TUPLE
    UASTERISK
    '.'


Rules useless in grammar

  151 ids: IDENTIFIER
  152    | ids ',' IDENTIFIER

  153 types: type
  154      | types ',' type

  155 arrayIndex: arrayDef '[' expr ']'
  156           | IDENTIFIER '[' expr ']'

  157 fieldAccess: expr '.' IDENTIFIER
  158            | expr


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration
    3             | declaration declarations

    4 declaration: varDecl
    5            | typedef
    6            | proc
    7            | func
    8            | enum
    9            | union
   10            | struct

   11 varDecl: type IDENTIFIER ';'
   12        | type IDENTIFIER ASSIGN expr ';'
   13        | typequalifiers type IDENTIFIER ';'
   14        | typequalifiers type IDENTIFIER ASSIGN expr ';'

   15 typedef: TYPEDEF type IDENTIFIER ';'

   16 proc: PROC IDENTIFIER '(' ')' block
   17     | PROC IDENTIFIER '(' params ')' block

   18 func: FUNC IDENTIFIER '(' ')' ':' type block
   19     | FUNC IDENTIFIER '(' params ')' ':' type block

   20 enum: ENUM IDENTIFIER '{' enumValues '}'
   21     | ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}'

   22 enumValues: IDENTIFIER
   23           | IDENTIFIER ','
   24           | IDENTIFIER ASSIGN INT_LITERAL
   25           | IDENTIFIER ASSIGN INT_LITERAL ','
   26           | enumValues IDENTIFIER ASSIGN INT_LITERAL ','

   27 union: UNION IDENTIFIER '{' fields '}'

   28 struct: STRUCT IDENTIFIER '{' fields '}'

   29 statements: statement
   30           | statements statement

   31 statement: varDecl
   32          | assignment
   33          | while
   34          | for
   35          | foreach
   36          | BREAK ';'
   37          | CONTINUE ';'
   38          | PRINT expr ';'
   39          | DELETE expr ';'
   40          | match
   41          | return
   42          | if
   43          | subprogramCall ';'

   44 assignment: IDENTIFIER ASSIGN expr ';'

   45 while: WHILE '(' expr ')' block

   46 for: FOR '(' forHeader ')' block

   47 forHeader: ';' ';'
   48          | statement expr statement
   49          | ';' expr ';' statement
   50          | ';' ';' statement
   51          | statement ';' ';'
   52          | statement ';' expr ';'
   53          | ';' expr ';'

   54 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' block
   55        | FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

   56 match: MATCH '(' expr ')' '{' matchCases '}'
   57      | MATCH '(' expr ')' '{' matchCases ',' '}'

   58 matchCases: matchCase
   59           | matchCases ',' matchCase

   60 matchCase: matchLeft EQUALS_ARROW matchRight

   61 matchLeft: multipleMatchLeft
   62          | '_'

   63 multipleMatchLeft: literal
   64                  | multipleMatchLeft '|' literal

   65 matchRight: block
   66           | statement

   67 return: RETURN ';'
   68       | RETURN expr ';'

   69 if: IF '(' expr ')' block
   70   | IF '(' expr ')' block elseifs
   71   | IF '(' expr ')' block ELSE block
   72   | IF '(' expr ')' block elseifs ELSE block

   73 elseifs: elseif
   74        | elseifs elseif

   75 elseif: ELSE IF '(' expr ')' block

   76 fields: field ';'
   77       | fields field ';'

   78 params: field
   79       | params ',' field

   80 field: type IDENTIFIER

   81 typequalifiers: typequalifier
   82               | typequalifiers typequalifier

   83 typequalifier: CONST
   84              | STATIC

   85 type: USIZE
   86     | U8
   87     | U16
   88     | U32
   89     | U64
   90     | I8
   91     | I16
   92     | I32
   93     | I64
   94     | F32
   95     | F64
   96     | BOOL
   97     | STRING
   98     | CHAR
   99     | IDENTIFIER
  100     | type '[' ']'

  101 primary: IDENTIFIER
  102        | subprogramCall
  103        | NEW type
  104        | arrayDef
  105        | enumDef
  106        | compoundTypeDef

  107 literal: CHAR_LITERAL
  108        | STRING_LITERAL
  109        | FLOAT_LITERAL
  110        | INT_LITERAL
  111        | BOOLEAN_LITERAL

  112 expr: primary
  113     | literal
  114     | expr OR expr
  115     | expr AND expr
  116     | expr LESS_THAN expr
  117     | expr MORE_THAN expr
  118     | expr LESS_THAN_EQUALS expr
  119     | expr MORE_THAN_EQUALS expr
  120     | expr EQUALITY expr
  121     | expr INEQUALITY expr
  122     | expr PLUS expr
  123     | expr MINUS expr
  124     | expr ASTERISK expr
  125     | expr SLASH expr
  126     | expr PERCENTAGE expr
  127     | CAST '<' type '>' '(' expr ')'
  128     | AMPERSAND expr
  129     | NOT expr
  130     | PLUS expr
  131     | MINUS expr
  132     | HASHTAG expr
  133     | '(' expr ')'

  134 subprogramCall: IDENTIFIER '(' ')'
  135               | IDENTIFIER '(' arguments ')'

  136 arguments: expr
  137          | arguments ',' expr

  138 arrayDef: '[' ']'
  139         | '[' commaSeparatedExpr ']'

  140 commaSeparatedExpr: expr
  141                   | expr ','
  142                   | expr ',' commaSeparatedExpr

  143 enumDef: IDENTIFIER DOUBLE_COLON IDENTIFIER

  144 compoundTypeDef: type '{' '}'
  145                | type '{' compoundTypeFields '}'

  146 compoundTypeFields: type ':' expr
  147                   | type ':' expr ','
  148                   | type ':' expr ',' compoundTypeFields

  149 block: '{' '}'
  150      | '{' statements '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 17 18 19 45 46 54 55 56 57 69 70 71 72 75 127 133 134 135
    ')' (41) 16 17 18 19 45 46 54 55 56 57 69 70 71 72 75 127 133 134 135
    ',' (44) 23 25 26 57 59 79 137 141 142 147 148
    '.' (46)
    ':' (58) 18 19 54 55 146 147 148
    ';' (59) 11 12 13 14 15 36 37 38 39 43 44 47 49 50 51 52 53 67 68 76 77
    '<' (60) 127
    '>' (62) 127
    '[' (91) 100 138 139
    ']' (93) 100 138 139
    '_' (95) 62
    '{' (123) 20 21 27 28 56 57 144 145 149 150
    '|' (124) 64
    '}' (125) 20 21 27 28 56 57 144 145 149 150
    error (256)
    INT_LITERAL <iValue> (258) 24 25 26 110
    FLOAT_LITERAL <fValue> (259) 109
    STRING_LITERAL <sValue> (260) 108
    CHAR_LITERAL <cValue> (261) 107
    BOOLEAN_LITERAL <iValue> (262) 111
    IF (263) 69 70 71 72 75
    ELSE (264) 71 72 75
    WHILE (265) 45
    FOR (266) 46
    FOREACH (267) 54 55
    FUNC (268) 18 19
    PROC (269) 16 17
    RETURN (270) 67 68
    BREAK (271) 36
    CONTINUE (272) 37
    MATCH (273) 56 57
    ENUM (274) 20 21
    UNION (275) 27
    STRUCT (276) 28
    TUPLE (277)
    CONST (278) 83
    STATIC (279) 84
    USIZE (280) 85
    U8 (281) 86
    U16 (282) 87
    U32 (283) 88
    U64 (284) 89
    I8 (285) 90
    I16 (286) 91
    I32 (287) 92
    I64 (288) 93
    F32 (289) 94
    F64 (290) 95
    BOOL (291) 96
    STRING (292) 97
    CHAR (293) 98
    TYPEDEF (294) 15
    NOT (295) 129
    AND (296) 115
    OR (297) 114
    NEW (298) 103
    DELETE (299) 39
    PRINT (300) 38
    CAST (301) 127
    EQUALITY (302) 120
    INEQUALITY (303) 121
    ASSIGN (304) 12 14 24 25 26 44
    LESS_THAN_EQUALS (305) 118
    MORE_THAN_EQUALS (306) 119
    LESS_THAN (307) 21 116
    MORE_THAN (308) 21 117
    PLUS (309) 122 130
    MINUS (310) 123 131
    ASTERISK (311) 124
    SLASH (312) 125
    DOUBLE_COLON (313) 143
    EQUALS_ARROW (314) 60
    AMPERSAND (315) 128
    HASHTAG (316) 132
    PERCENTAGE (317) 126
    IDENTIFIER <sValue> (318) 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 44 54 55 80 99 101 134 135 143
    ULITERAL (319)
    UPRIMARY (320)
    UHASHTAG (321)
    UMINUS (322)
    UPLUS (323)
    UNOT (324)
    UASTERISK (325)
    UAMPERSAND (326)
    UTYPE (327)
    UPARENTESISEXPR (328)


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    program (89)
        on left: 1
        on right: 0
    declarations (90)
        on left: 2 3
        on right: 1 3
    declaration (91)
        on left: 4 5 6 7 8 9 10
        on right: 2 3
    varDecl (92)
        on left: 11 12 13 14
        on right: 4 31
    typedef (93)
        on left: 15
        on right: 5
    proc (94)
        on left: 16 17
        on right: 6
    func (95)
        on left: 18 19
        on right: 7
    enum (96)
        on left: 20 21
        on right: 8
    enumValues (97)
        on left: 22 23 24 25 26
        on right: 20 21 26
    union (98)
        on left: 27
        on right: 9
    struct (99)
        on left: 28
        on right: 10
    statements (100)
        on left: 29 30
        on right: 30 150
    statement (101)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 29 30 48 49 50 51 52 66
    assignment (102)
        on left: 44
        on right: 32
    while (103)
        on left: 45
        on right: 33
    for (104)
        on left: 46
        on right: 34
    forHeader (105)
        on left: 47 48 49 50 51 52 53
        on right: 46
    foreach (106)
        on left: 54 55
        on right: 35
    match (107)
        on left: 56 57
        on right: 40
    matchCases (108)
        on left: 58 59
        on right: 56 57 59
    matchCase (109)
        on left: 60
        on right: 58 59
    matchLeft (110)
        on left: 61 62
        on right: 60
    multipleMatchLeft (111)
        on left: 63 64
        on right: 61 64
    matchRight (112)
        on left: 65 66
        on right: 60
    return (113)
        on left: 67 68
        on right: 41
    if (114)
        on left: 69 70 71 72
        on right: 42
    elseifs (115)
        on left: 73 74
        on right: 70 72 74
    elseif (116)
        on left: 75
        on right: 73 74
    fields (117)
        on left: 76 77
        on right: 27 28 77
    params (118)
        on left: 78 79
        on right: 17 19 79
    field (119)
        on left: 80
        on right: 76 77 78 79
    typequalifiers (120)
        on left: 81 82
        on right: 13 14 82
    typequalifier (121)
        on left: 83 84
        on right: 55 81 82
    type (122)
        on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
        on right: 11 12 13 14 15 18 19 21 54 55 80 100 103 127 144 145 146 147 148
    primary (123)
        on left: 101 102 103 104 105 106
        on right: 112
    literal (124)
        on left: 107 108 109 110 111
        on right: 63 64 113
    expr (125)
        on left: 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
        on right: 12 14 38 39 44 45 48 49 52 53 56 57 68 69 70 71 72 75 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 136 137 140 141 142 146 147 148
    subprogramCall (126)
        on left: 134 135
        on right: 43 102
    arguments (127)
        on left: 136 137
        on right: 135 137
    arrayDef (128)
        on left: 138 139
        on right: 104
    commaSeparatedExpr (129)
        on left: 140 141 142
        on right: 139 142
    enumDef (130)
        on left: 143
        on right: 105
    compoundTypeDef (131)
        on left: 144 145
        on right: 106
    compoundTypeFields (132)
        on left: 146 147 148
        on right: 145 148
    block (133)
        on left: 149 150
        on right: 16 17 18 19 45 46 54 55 65 69 70 71 72 75


State 0

    0 $accept: • program $end

    FUNC        shift, and go to state 1
    PROC        shift, and go to state 2
    ENUM        shift, and go to state 3
    UNION       shift, and go to state 4
    STRUCT      shift, and go to state 5
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    TYPEDEF     shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    program         go to state 24
    declarations    go to state 25
    declaration     go to state 26
    varDecl         go to state 27
    typedef         go to state 28
    proc            go to state 29
    func            go to state 30
    enum            go to state 31
    union           go to state 32
    struct          go to state 33
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36


State 1

   18 func: FUNC • IDENTIFIER '(' ')' ':' type block
   19     | FUNC • IDENTIFIER '(' params ')' ':' type block

    IDENTIFIER  shift, and go to state 37


State 2

   16 proc: PROC • IDENTIFIER '(' ')' block
   17     | PROC • IDENTIFIER '(' params ')' block

    IDENTIFIER  shift, and go to state 38


State 3

   20 enum: ENUM • IDENTIFIER '{' enumValues '}'
   21     | ENUM • IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}'

    IDENTIFIER  shift, and go to state 39


State 4

   27 union: UNION • IDENTIFIER '{' fields '}'

    IDENTIFIER  shift, and go to state 40


State 5

   28 struct: STRUCT • IDENTIFIER '{' fields '}'

    IDENTIFIER  shift, and go to state 41


State 6

   83 typequalifier: CONST •

    $default  reduce using rule 83 (typequalifier)


State 7

   84 typequalifier: STATIC •

    $default  reduce using rule 84 (typequalifier)


State 8

   85 type: USIZE •

    $default  reduce using rule 85 (type)


State 9

   86 type: U8 •

    $default  reduce using rule 86 (type)


State 10

   87 type: U16 •

    $default  reduce using rule 87 (type)


State 11

   88 type: U32 •

    $default  reduce using rule 88 (type)


State 12

   89 type: U64 •

    $default  reduce using rule 89 (type)


State 13

   90 type: I8 •

    $default  reduce using rule 90 (type)


State 14

   91 type: I16 •

    $default  reduce using rule 91 (type)


State 15

   92 type: I32 •

    $default  reduce using rule 92 (type)


State 16

   93 type: I64 •

    $default  reduce using rule 93 (type)


State 17

   94 type: F32 •

    $default  reduce using rule 94 (type)


State 18

   95 type: F64 •

    $default  reduce using rule 95 (type)


State 19

   96 type: BOOL •

    $default  reduce using rule 96 (type)


State 20

   97 type: STRING •

    $default  reduce using rule 97 (type)


State 21

   98 type: CHAR •

    $default  reduce using rule 98 (type)


State 22

   15 typedef: TYPEDEF • type IDENTIFIER ';'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 42


State 23

   99 type: IDENTIFIER •

    $default  reduce using rule 99 (type)


State 24

    0 $accept: program • $end

    $end  shift, and go to state 43


State 25

    1 program: declarations •

    $default  reduce using rule 1 (program)


State 26

    2 declarations: declaration •
    3             | declaration • declarations

    FUNC        shift, and go to state 1
    PROC        shift, and go to state 2
    ENUM        shift, and go to state 3
    UNION       shift, and go to state 4
    STRUCT      shift, and go to state 5
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    TYPEDEF     shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 2 (declarations)

    declarations    go to state 44
    declaration     go to state 26
    varDecl         go to state 27
    typedef         go to state 28
    proc            go to state 29
    func            go to state 30
    enum            go to state 31
    union           go to state 32
    struct          go to state 33
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36


State 27

    4 declaration: varDecl •

    $default  reduce using rule 4 (declaration)


State 28

    5 declaration: typedef •

    $default  reduce using rule 5 (declaration)


State 29

    6 declaration: proc •

    $default  reduce using rule 6 (declaration)


State 30

    7 declaration: func •

    $default  reduce using rule 7 (declaration)


State 31

    8 declaration: enum •

    $default  reduce using rule 8 (declaration)


State 32

    9 declaration: union •

    $default  reduce using rule 9 (declaration)


State 33

   10 declaration: struct •

    $default  reduce using rule 10 (declaration)


State 34

   13 varDecl: typequalifiers • type IDENTIFIER ';'
   14        | typequalifiers • type IDENTIFIER ASSIGN expr ';'
   82 typequalifiers: typequalifiers • typequalifier

    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    typequalifier  go to state 45
    type           go to state 46


State 35

   81 typequalifiers: typequalifier •

    $default  reduce using rule 81 (typequalifiers)


State 36

   11 varDecl: type • IDENTIFIER ';'
   12        | type • IDENTIFIER ASSIGN expr ';'
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 47
    '['         shift, and go to state 48


State 37

   18 func: FUNC IDENTIFIER • '(' ')' ':' type block
   19     | FUNC IDENTIFIER • '(' params ')' ':' type block

    '('  shift, and go to state 49


State 38

   16 proc: PROC IDENTIFIER • '(' ')' block
   17     | PROC IDENTIFIER • '(' params ')' block

    '('  shift, and go to state 50


State 39

   20 enum: ENUM IDENTIFIER • '{' enumValues '}'
   21     | ENUM IDENTIFIER • LESS_THAN type MORE_THAN '{' enumValues '}'

    LESS_THAN  shift, and go to state 51
    '{'        shift, and go to state 52


State 40

   27 union: UNION IDENTIFIER • '{' fields '}'

    '{'  shift, and go to state 53


State 41

   28 struct: STRUCT IDENTIFIER • '{' fields '}'

    '{'  shift, and go to state 54


State 42

   15 typedef: TYPEDEF type • IDENTIFIER ';'
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 55
    '['         shift, and go to state 48


State 43

    0 $accept: program $end •

    $default  accept


State 44

    3 declarations: declaration declarations •

    $default  reduce using rule 3 (declarations)


State 45

   82 typequalifiers: typequalifiers typequalifier •

    $default  reduce using rule 82 (typequalifiers)


State 46

   13 varDecl: typequalifiers type • IDENTIFIER ';'
   14        | typequalifiers type • IDENTIFIER ASSIGN expr ';'
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 56
    '['         shift, and go to state 48


State 47

   11 varDecl: type IDENTIFIER • ';'
   12        | type IDENTIFIER • ASSIGN expr ';'

    ASSIGN  shift, and go to state 57
    ';'     shift, and go to state 58


State 48

  100 type: type '[' • ']'

    ']'  shift, and go to state 59


State 49

   18 func: FUNC IDENTIFIER '(' • ')' ':' type block
   19     | FUNC IDENTIFIER '(' • params ')' ':' type block

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23
    ')'         shift, and go to state 60

    params  go to state 61
    field   go to state 62
    type    go to state 63


State 50

   16 proc: PROC IDENTIFIER '(' • ')' block
   17     | PROC IDENTIFIER '(' • params ')' block

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23
    ')'         shift, and go to state 64

    params  go to state 65
    field   go to state 62
    type    go to state 63


State 51

   21 enum: ENUM IDENTIFIER LESS_THAN • type MORE_THAN '{' enumValues '}'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 66


State 52

   20 enum: ENUM IDENTIFIER '{' • enumValues '}'

    IDENTIFIER  shift, and go to state 67

    enumValues  go to state 68


State 53

   27 union: UNION IDENTIFIER '{' • fields '}'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    fields  go to state 69
    field   go to state 70
    type    go to state 63


State 54

   28 struct: STRUCT IDENTIFIER '{' • fields '}'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    fields  go to state 71
    field   go to state 70
    type    go to state 63


State 55

   15 typedef: TYPEDEF type IDENTIFIER • ';'

    ';'  shift, and go to state 72


State 56

   13 varDecl: typequalifiers type IDENTIFIER • ';'
   14        | typequalifiers type IDENTIFIER • ASSIGN expr ';'

    ASSIGN  shift, and go to state 73
    ';'     shift, and go to state 74


State 57

   12 varDecl: type IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 93
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 58

   11 varDecl: type IDENTIFIER ';' •

    $default  reduce using rule 11 (varDecl)


State 59

  100 type: type '[' ']' •

    $default  reduce using rule 100 (type)


State 60

   18 func: FUNC IDENTIFIER '(' ')' • ':' type block

    ':'  shift, and go to state 98


State 61

   19 func: FUNC IDENTIFIER '(' params • ')' ':' type block
   79 params: params • ',' field

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 62

   78 params: field •

    $default  reduce using rule 78 (params)


State 63

   80 field: type • IDENTIFIER
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 101
    '['         shift, and go to state 48


State 64

   16 proc: PROC IDENTIFIER '(' ')' • block

    '{'  shift, and go to state 102

    block  go to state 103


State 65

   17 proc: PROC IDENTIFIER '(' params • ')' block
   79 params: params • ',' field

    ')'  shift, and go to state 104
    ','  shift, and go to state 100


State 66

   21 enum: ENUM IDENTIFIER LESS_THAN type • MORE_THAN '{' enumValues '}'
  100 type: type • '[' ']'

    MORE_THAN  shift, and go to state 105
    '['        shift, and go to state 48


State 67

   22 enumValues: IDENTIFIER •
   23           | IDENTIFIER • ','
   24           | IDENTIFIER • ASSIGN INT_LITERAL
   25           | IDENTIFIER • ASSIGN INT_LITERAL ','

    ASSIGN  shift, and go to state 106
    ','     shift, and go to state 107

    $default  reduce using rule 22 (enumValues)


State 68

   20 enum: ENUM IDENTIFIER '{' enumValues • '}'
   26 enumValues: enumValues • IDENTIFIER ASSIGN INT_LITERAL ','

    IDENTIFIER  shift, and go to state 108
    '}'         shift, and go to state 109


State 69

   27 union: UNION IDENTIFIER '{' fields • '}'
   77 fields: fields • field ';'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23
    '}'         shift, and go to state 110

    field  go to state 111
    type   go to state 63


State 70

   76 fields: field • ';'

    ';'  shift, and go to state 112


State 71

   28 struct: STRUCT IDENTIFIER '{' fields • '}'
   77 fields: fields • field ';'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23
    '}'         shift, and go to state 113

    field  go to state 111
    type   go to state 63


State 72

   15 typedef: TYPEDEF type IDENTIFIER ';' •

    $default  reduce using rule 15 (typedef)


State 73

   14 varDecl: typequalifiers type IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 114
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 74

   13 varDecl: typequalifiers type IDENTIFIER ';' •

    $default  reduce using rule 13 (varDecl)


State 75

  110 literal: INT_LITERAL •

    $default  reduce using rule 110 (literal)


State 76

  109 literal: FLOAT_LITERAL •

    $default  reduce using rule 109 (literal)


State 77

  108 literal: STRING_LITERAL •

    $default  reduce using rule 108 (literal)


State 78

  107 literal: CHAR_LITERAL •

    $default  reduce using rule 107 (literal)


State 79

  111 literal: BOOLEAN_LITERAL •

    $default  reduce using rule 111 (literal)


State 80

  129 expr: NOT • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 115
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 81

  103 primary: NEW • type

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 116


State 82

  127 expr: CAST • '<' type '>' '(' expr ')'

    '<'  shift, and go to state 117


State 83

  130 expr: PLUS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 118
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 84

  131 expr: MINUS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 119
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 85

  128 expr: AMPERSAND • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 120
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 86

  132 expr: HASHTAG • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 121
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 87

   99 type: IDENTIFIER •
  101 primary: IDENTIFIER •
  134 subprogramCall: IDENTIFIER • '(' ')'
  135               | IDENTIFIER • '(' arguments ')'
  143 enumDef: IDENTIFIER • DOUBLE_COLON IDENTIFIER

    DOUBLE_COLON  shift, and go to state 122
    '('           shift, and go to state 123

    '{'       reduce using rule 99 (type)
    '['       reduce using rule 99 (type)
    $default  reduce using rule 101 (primary)


State 88

  133 expr: '(' • expr ')'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 124
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 89

  138 arrayDef: '[' • ']'
  139         | '[' • commaSeparatedExpr ']'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89
    ']'              shift, and go to state 125

    type                go to state 90
    primary             go to state 91
    literal             go to state 92
    expr                go to state 126
    subprogramCall      go to state 94
    arrayDef            go to state 95
    commaSeparatedExpr  go to state 127
    enumDef             go to state 96
    compoundTypeDef     go to state 97


State 90

  100 type: type • '[' ']'
  144 compoundTypeDef: type • '{' '}'
  145                | type • '{' compoundTypeFields '}'

    '{'  shift, and go to state 128
    '['  shift, and go to state 48


State 91

  112 expr: primary •

    $default  reduce using rule 112 (expr)


State 92

  113 expr: literal •

    $default  reduce using rule 113 (expr)


State 93

   12 varDecl: type IDENTIFIER ASSIGN expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 142


State 94

  102 primary: subprogramCall •

    $default  reduce using rule 102 (primary)


State 95

  104 primary: arrayDef •

    $default  reduce using rule 104 (primary)


State 96

  105 primary: enumDef •

    $default  reduce using rule 105 (primary)


State 97

  106 primary: compoundTypeDef •

    $default  reduce using rule 106 (primary)


State 98

   18 func: FUNC IDENTIFIER '(' ')' ':' • type block

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 143


State 99

   19 func: FUNC IDENTIFIER '(' params ')' • ':' type block

    ':'  shift, and go to state 144


State 100

   79 params: params ',' • field

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    field  go to state 145
    type   go to state 63


State 101

   80 field: type IDENTIFIER •

    $default  reduce using rule 80 (field)


State 102

  149 block: '{' • '}'
  150      | '{' • statements '}'

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156
    '}'         shift, and go to state 157

    varDecl         go to state 158
    statements      go to state 159
    statement       go to state 160
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 103

   16 proc: PROC IDENTIFIER '(' ')' block •

    $default  reduce using rule 16 (proc)


State 104

   17 proc: PROC IDENTIFIER '(' params ')' • block

    '{'  shift, and go to state 102

    block  go to state 169


State 105

   21 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN • '{' enumValues '}'

    '{'  shift, and go to state 170


State 106

   24 enumValues: IDENTIFIER ASSIGN • INT_LITERAL
   25           | IDENTIFIER ASSIGN • INT_LITERAL ','

    INT_LITERAL  shift, and go to state 171


State 107

   23 enumValues: IDENTIFIER ',' •

    $default  reduce using rule 23 (enumValues)


State 108

   26 enumValues: enumValues IDENTIFIER • ASSIGN INT_LITERAL ','

    ASSIGN  shift, and go to state 172


State 109

   20 enum: ENUM IDENTIFIER '{' enumValues '}' •

    $default  reduce using rule 20 (enum)


State 110

   27 union: UNION IDENTIFIER '{' fields '}' •

    $default  reduce using rule 27 (union)


State 111

   77 fields: fields field • ';'

    ';'  shift, and go to state 173


State 112

   76 fields: field ';' •

    $default  reduce using rule 76 (fields)


State 113

   28 struct: STRUCT IDENTIFIER '{' fields '}' •

    $default  reduce using rule 28 (struct)


State 114

   14 varDecl: typequalifiers type IDENTIFIER ASSIGN expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 174


State 115

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  129     | NOT expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 129 (expr)


State 116

  100 type: type • '[' ']'
  103 primary: NEW type •

    '['  shift, and go to state 48

    $default  reduce using rule 103 (primary)


State 117

  127 expr: CAST '<' • type '>' '(' expr ')'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 175


State 118

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  130     | PLUS expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 130 (expr)


State 119

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  131     | MINUS expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 131 (expr)


State 120

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  128     | AMPERSAND expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 128 (expr)


State 121

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  132     | HASHTAG expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 132 (expr)


State 122

  143 enumDef: IDENTIFIER DOUBLE_COLON • IDENTIFIER

    IDENTIFIER  shift, and go to state 176


State 123

  134 subprogramCall: IDENTIFIER '(' • ')'
  135               | IDENTIFIER '(' • arguments ')'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    ')'              shift, and go to state 177
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 178
    subprogramCall   go to state 94
    arguments        go to state 179
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 124

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  133     | '(' expr • ')'

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 180


State 125

  138 arrayDef: '[' ']' •

    $default  reduce using rule 138 (arrayDef)


State 126

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  140 commaSeparatedExpr: expr •
  141                   | expr • ','
  142                   | expr • ',' commaSeparatedExpr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ','               shift, and go to state 181

    $default  reduce using rule 140 (commaSeparatedExpr)


State 127

  139 arrayDef: '[' commaSeparatedExpr • ']'

    ']'  shift, and go to state 182


State 128

  144 compoundTypeDef: type '{' • '}'
  145                | type '{' • compoundTypeFields '}'

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23
    '}'         shift, and go to state 183

    type                go to state 184
    compoundTypeFields  go to state 185


State 129

  115 expr: expr AND • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 186
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 130

  114 expr: expr OR • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 187
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 131

  120 expr: expr EQUALITY • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 188
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 132

  121 expr: expr INEQUALITY • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 189
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 133

  118 expr: expr LESS_THAN_EQUALS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 190
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 134

  119 expr: expr MORE_THAN_EQUALS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 191
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 135

  116 expr: expr LESS_THAN • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 192
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 136

  117 expr: expr MORE_THAN • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 193
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 137

  122 expr: expr PLUS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 194
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 138

  123 expr: expr MINUS • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 195
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 139

  124 expr: expr ASTERISK • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 196
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 140

  125 expr: expr SLASH • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 197
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 141

  126 expr: expr PERCENTAGE • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 198
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 142

   12 varDecl: type IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 12 (varDecl)


State 143

   18 func: FUNC IDENTIFIER '(' ')' ':' type • block
  100 type: type • '[' ']'

    '{'  shift, and go to state 102
    '['  shift, and go to state 48

    block  go to state 199


State 144

   19 func: FUNC IDENTIFIER '(' params ')' ':' • type block

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 200


State 145

   79 params: params ',' field •

    $default  reduce using rule 79 (params)


State 146

   69 if: IF • '(' expr ')' block
   70   | IF • '(' expr ')' block elseifs
   71   | IF • '(' expr ')' block ELSE block
   72   | IF • '(' expr ')' block elseifs ELSE block

    '('  shift, and go to state 201


State 147

   45 while: WHILE • '(' expr ')' block

    '('  shift, and go to state 202


State 148

   46 for: FOR • '(' forHeader ')' block

    '('  shift, and go to state 203


State 149

   54 foreach: FOREACH • '(' type IDENTIFIER ':' IDENTIFIER ')' block
   55        | FOREACH • '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

    '('  shift, and go to state 204


State 150

   67 return: RETURN • ';'
   68       | RETURN • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    ';'              shift, and go to state 205
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 206
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 151

   36 statement: BREAK • ';'

    ';'  shift, and go to state 207


State 152

   37 statement: CONTINUE • ';'

    ';'  shift, and go to state 208


State 153

   56 match: MATCH • '(' expr ')' '{' matchCases '}'
   57      | MATCH • '(' expr ')' '{' matchCases ',' '}'

    '('  shift, and go to state 209


State 154

   39 statement: DELETE • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 210
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 155

   38 statement: PRINT • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 211
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 156

   44 assignment: IDENTIFIER • ASSIGN expr ';'
   99 type: IDENTIFIER •
  134 subprogramCall: IDENTIFIER • '(' ')'
  135               | IDENTIFIER • '(' arguments ')'

    ASSIGN  shift, and go to state 212
    '('     shift, and go to state 123

    $default  reduce using rule 99 (type)


State 157

  149 block: '{' '}' •

    $default  reduce using rule 149 (block)


State 158

   31 statement: varDecl •

    $default  reduce using rule 31 (statement)


State 159

   30 statements: statements • statement
  150 block: '{' statements • '}'

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156
    '}'         shift, and go to state 213

    varDecl         go to state 158
    statement       go to state 214
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 160

   29 statements: statement •

    $default  reduce using rule 29 (statements)


State 161

   32 statement: assignment •

    $default  reduce using rule 32 (statement)


State 162

   33 statement: while •

    $default  reduce using rule 33 (statement)


State 163

   34 statement: for •

    $default  reduce using rule 34 (statement)


State 164

   35 statement: foreach •

    $default  reduce using rule 35 (statement)


State 165

   40 statement: match •

    $default  reduce using rule 40 (statement)


State 166

   41 statement: return •

    $default  reduce using rule 41 (statement)


State 167

   42 statement: if •

    $default  reduce using rule 42 (statement)


State 168

   43 statement: subprogramCall • ';'

    ';'  shift, and go to state 215


State 169

   17 proc: PROC IDENTIFIER '(' params ')' block •

    $default  reduce using rule 17 (proc)


State 170

   21 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' • enumValues '}'

    IDENTIFIER  shift, and go to state 67

    enumValues  go to state 216


State 171

   24 enumValues: IDENTIFIER ASSIGN INT_LITERAL •
   25           | IDENTIFIER ASSIGN INT_LITERAL • ','

    ','  shift, and go to state 217

    $default  reduce using rule 24 (enumValues)


State 172

   26 enumValues: enumValues IDENTIFIER ASSIGN • INT_LITERAL ','

    INT_LITERAL  shift, and go to state 218


State 173

   77 fields: fields field ';' •

    $default  reduce using rule 77 (fields)


State 174

   14 varDecl: typequalifiers type IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 14 (varDecl)


State 175

  100 type: type • '[' ']'
  127 expr: CAST '<' type • '>' '(' expr ')'

    '['  shift, and go to state 48
    '>'  shift, and go to state 219


State 176

  143 enumDef: IDENTIFIER DOUBLE_COLON IDENTIFIER •

    $default  reduce using rule 143 (enumDef)


State 177

  134 subprogramCall: IDENTIFIER '(' ')' •

    $default  reduce using rule 134 (subprogramCall)


State 178

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  136 arguments: expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 136 (arguments)


State 179

  135 subprogramCall: IDENTIFIER '(' arguments • ')'
  137 arguments: arguments • ',' expr

    ')'  shift, and go to state 220
    ','  shift, and go to state 221


State 180

  133 expr: '(' expr ')' •

    $default  reduce using rule 133 (expr)


State 181

  141 commaSeparatedExpr: expr ',' •
  142                   | expr ',' • commaSeparatedExpr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    $default  reduce using rule 141 (commaSeparatedExpr)

    type                go to state 90
    primary             go to state 91
    literal             go to state 92
    expr                go to state 126
    subprogramCall      go to state 94
    arrayDef            go to state 95
    commaSeparatedExpr  go to state 222
    enumDef             go to state 96
    compoundTypeDef     go to state 97


State 182

  139 arrayDef: '[' commaSeparatedExpr ']' •

    $default  reduce using rule 139 (arrayDef)


State 183

  144 compoundTypeDef: type '{' '}' •

    $default  reduce using rule 144 (compoundTypeDef)


State 184

  100 type: type • '[' ']'
  146 compoundTypeFields: type • ':' expr
  147                   | type • ':' expr ','
  148                   | type • ':' expr ',' compoundTypeFields

    ':'  shift, and go to state 223
    '['  shift, and go to state 48


State 185

  145 compoundTypeDef: type '{' compoundTypeFields • '}'

    '}'  shift, and go to state 224


State 186

  114 expr: expr • OR expr
  115     | expr • AND expr
  115     | expr AND expr •
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    OR  shift, and go to state 130

    $default  reduce using rule 115 (expr)


State 187

  114 expr: expr • OR expr
  114     | expr OR expr •
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    $default  reduce using rule 114 (expr)


State 188

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  120     | expr EQUALITY expr •
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136

    $default  reduce using rule 120 (expr)


State 189

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  121     | expr INEQUALITY expr •
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136

    $default  reduce using rule 121 (expr)


State 190

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  118     | expr LESS_THAN_EQUALS expr •
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND  shift, and go to state 129
    OR   shift, and go to state 130

    $default  reduce using rule 118 (expr)


State 191

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  119     | expr MORE_THAN_EQUALS expr •
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND  shift, and go to state 129
    OR   shift, and go to state 130

    $default  reduce using rule 119 (expr)


State 192

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  116     | expr LESS_THAN expr •
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND  shift, and go to state 129
    OR   shift, and go to state 130

    $default  reduce using rule 116 (expr)


State 193

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  117     | expr MORE_THAN expr •
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND  shift, and go to state 129
    OR   shift, and go to state 130

    $default  reduce using rule 117 (expr)


State 194

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  122     | expr PLUS expr •
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136

    $default  reduce using rule 122 (expr)


State 195

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  123     | expr MINUS expr •
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136

    $default  reduce using rule 123 (expr)


State 196

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  124     | expr ASTERISK expr •
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138

    $default  reduce using rule 124 (expr)


State 197

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  125     | expr SLASH expr •
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138

    $default  reduce using rule 125 (expr)


State 198

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  126     | expr PERCENTAGE expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138

    $default  reduce using rule 126 (expr)


State 199

   18 func: FUNC IDENTIFIER '(' ')' ':' type block •

    $default  reduce using rule 18 (func)


State 200

   19 func: FUNC IDENTIFIER '(' params ')' ':' type • block
  100 type: type • '[' ']'

    '{'  shift, and go to state 102
    '['  shift, and go to state 48

    block  go to state 225


State 201

   69 if: IF '(' • expr ')' block
   70   | IF '(' • expr ')' block elseifs
   71   | IF '(' • expr ')' block ELSE block
   72   | IF '(' • expr ')' block elseifs ELSE block

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 226
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 202

   45 while: WHILE '(' • expr ')' block

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 227
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 203

   46 for: FOR '(' • forHeader ')' block

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156
    ';'         shift, and go to state 228

    varDecl         go to state 158
    statement       go to state 229
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    forHeader       go to state 230
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 204

   54 foreach: FOREACH '(' • type IDENTIFIER ':' IDENTIFIER ')' block
   55        | FOREACH '(' • typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    typequalifier  go to state 231
    type           go to state 232


State 205

   67 return: RETURN ';' •

    $default  reduce using rule 67 (return)


State 206

   68 return: RETURN expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 233


State 207

   36 statement: BREAK ';' •

    $default  reduce using rule 36 (statement)


State 208

   37 statement: CONTINUE ';' •

    $default  reduce using rule 37 (statement)


State 209

   56 match: MATCH '(' • expr ')' '{' matchCases '}'
   57      | MATCH '(' • expr ')' '{' matchCases ',' '}'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 234
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 210

   39 statement: DELETE expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 235


State 211

   38 statement: PRINT expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 236


State 212

   44 assignment: IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 237
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 213

  150 block: '{' statements '}' •

    $default  reduce using rule 150 (block)


State 214

   30 statements: statements statement •

    $default  reduce using rule 30 (statements)


State 215

   43 statement: subprogramCall ';' •

    $default  reduce using rule 43 (statement)


State 216

   21 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues • '}'
   26 enumValues: enumValues • IDENTIFIER ASSIGN INT_LITERAL ','

    IDENTIFIER  shift, and go to state 108
    '}'         shift, and go to state 238


State 217

   25 enumValues: IDENTIFIER ASSIGN INT_LITERAL ',' •

    $default  reduce using rule 25 (enumValues)


State 218

   26 enumValues: enumValues IDENTIFIER ASSIGN INT_LITERAL • ','

    ','  shift, and go to state 239


State 219

  127 expr: CAST '<' type '>' • '(' expr ')'

    '('  shift, and go to state 240


State 220

  135 subprogramCall: IDENTIFIER '(' arguments ')' •

    $default  reduce using rule 135 (subprogramCall)


State 221

  137 arguments: arguments ',' • expr

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 241
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 222

  142 commaSeparatedExpr: expr ',' commaSeparatedExpr •

    $default  reduce using rule 142 (commaSeparatedExpr)


State 223

  146 compoundTypeFields: type ':' • expr
  147                   | type ':' • expr ','
  148                   | type ':' • expr ',' compoundTypeFields

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 242
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 224

  145 compoundTypeDef: type '{' compoundTypeFields '}' •

    $default  reduce using rule 145 (compoundTypeDef)


State 225

   19 func: FUNC IDENTIFIER '(' params ')' ':' type block •

    $default  reduce using rule 19 (func)


State 226

   69 if: IF '(' expr • ')' block
   70   | IF '(' expr • ')' block elseifs
   71   | IF '(' expr • ')' block ELSE block
   72   | IF '(' expr • ')' block elseifs ELSE block
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 243


State 227

   45 while: WHILE '(' expr • ')' block
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 244


State 228

   47 forHeader: ';' • ';'
   49          | ';' • expr ';' statement
   50          | ';' • ';' statement
   53          | ';' • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    ';'              shift, and go to state 245
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 246
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 229

   48 forHeader: statement • expr statement
   51          | statement • ';' ';'
   52          | statement • ';' expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    ';'              shift, and go to state 247
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 248
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 230

   46 for: FOR '(' forHeader • ')' block

    ')'  shift, and go to state 249


State 231

   55 foreach: FOREACH '(' typequalifier • type IDENTIFIER ':' IDENTIFIER ')' block

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    type  go to state 250


State 232

   54 foreach: FOREACH '(' type • IDENTIFIER ':' IDENTIFIER ')' block
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 251
    '['         shift, and go to state 48


State 233

   68 return: RETURN expr ';' •

    $default  reduce using rule 68 (return)


State 234

   56 match: MATCH '(' expr • ')' '{' matchCases '}'
   57      | MATCH '(' expr • ')' '{' matchCases ',' '}'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 252


State 235

   39 statement: DELETE expr ';' •

    $default  reduce using rule 39 (statement)


State 236

   38 statement: PRINT expr ';' •

    $default  reduce using rule 38 (statement)


State 237

   44 assignment: IDENTIFIER ASSIGN expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 253


State 238

   21 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}' •

    $default  reduce using rule 21 (enum)


State 239

   26 enumValues: enumValues IDENTIFIER ASSIGN INT_LITERAL ',' •

    $default  reduce using rule 26 (enumValues)


State 240

  127 expr: CAST '<' type '>' '(' • expr ')'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 254
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 241

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  137 arguments: arguments ',' expr •

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141

    $default  reduce using rule 137 (arguments)


State 242

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  146 compoundTypeFields: type ':' expr •
  147                   | type ':' expr • ','
  148                   | type ':' expr • ',' compoundTypeFields

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ','               shift, and go to state 255

    $default  reduce using rule 146 (compoundTypeFields)


State 243

   69 if: IF '(' expr ')' • block
   70   | IF '(' expr ')' • block elseifs
   71   | IF '(' expr ')' • block ELSE block
   72   | IF '(' expr ')' • block elseifs ELSE block

    '{'  shift, and go to state 102

    block  go to state 256


State 244

   45 while: WHILE '(' expr ')' • block

    '{'  shift, and go to state 102

    block  go to state 257


State 245

   47 forHeader: ';' ';' •
   50          | ';' ';' • statement

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156

    $default  reduce using rule 47 (forHeader)

    varDecl         go to state 158
    statement       go to state 258
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 246

   49 forHeader: ';' expr • ';' statement
   53          | ';' expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 259


State 247

   51 forHeader: statement ';' • ';'
   52          | statement ';' • expr ';'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    ';'              shift, and go to state 260
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 261
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 248

   48 forHeader: statement expr • statement
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    IF                shift, and go to state 146
    WHILE             shift, and go to state 147
    FOR               shift, and go to state 148
    FOREACH           shift, and go to state 149
    RETURN            shift, and go to state 150
    BREAK             shift, and go to state 151
    CONTINUE          shift, and go to state 152
    MATCH             shift, and go to state 153
    CONST             shift, and go to state 6
    STATIC            shift, and go to state 7
    USIZE             shift, and go to state 8
    U8                shift, and go to state 9
    U16               shift, and go to state 10
    U32               shift, and go to state 11
    U64               shift, and go to state 12
    I8                shift, and go to state 13
    I16               shift, and go to state 14
    I32               shift, and go to state 15
    I64               shift, and go to state 16
    F32               shift, and go to state 17
    F64               shift, and go to state 18
    BOOL              shift, and go to state 19
    STRING            shift, and go to state 20
    CHAR              shift, and go to state 21
    AND               shift, and go to state 129
    OR                shift, and go to state 130
    DELETE            shift, and go to state 154
    PRINT             shift, and go to state 155
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    IDENTIFIER        shift, and go to state 156

    varDecl         go to state 158
    statement       go to state 262
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 249

   46 for: FOR '(' forHeader ')' • block

    '{'  shift, and go to state 102

    block  go to state 263


State 250

   55 foreach: FOREACH '(' typequalifier type • IDENTIFIER ':' IDENTIFIER ')' block
  100 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 264
    '['         shift, and go to state 48


State 251

   54 foreach: FOREACH '(' type IDENTIFIER • ':' IDENTIFIER ')' block

    ':'  shift, and go to state 265


State 252

   56 match: MATCH '(' expr ')' • '{' matchCases '}'
   57      | MATCH '(' expr ')' • '{' matchCases ',' '}'

    '{'  shift, and go to state 266


State 253

   44 assignment: IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 44 (assignment)


State 254

  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr
  127     | CAST '<' type '>' '(' expr • ')'

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 267


State 255

  147 compoundTypeFields: type ':' expr ',' •
  148                   | type ':' expr ',' • compoundTypeFields

    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 147 (compoundTypeFields)

    type                go to state 184
    compoundTypeFields  go to state 268


State 256

   69 if: IF '(' expr ')' block •
   70   | IF '(' expr ')' block • elseifs
   71   | IF '(' expr ')' block • ELSE block
   72   | IF '(' expr ')' block • elseifs ELSE block

    ELSE  shift, and go to state 269

    $default  reduce using rule 69 (if)

    elseifs  go to state 270
    elseif   go to state 271


State 257

   45 while: WHILE '(' expr ')' block •

    $default  reduce using rule 45 (while)


State 258

   50 forHeader: ';' ';' statement •

    $default  reduce using rule 50 (forHeader)


State 259

   49 forHeader: ';' expr ';' • statement
   53          | ';' expr ';' •

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156

    $default  reduce using rule 53 (forHeader)

    varDecl         go to state 158
    statement       go to state 272
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168


State 260

   51 forHeader: statement ';' ';' •

    $default  reduce using rule 51 (forHeader)


State 261

   52 forHeader: statement ';' expr • ';'
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ';'               shift, and go to state 273


State 262

   48 forHeader: statement expr statement •

    $default  reduce using rule 48 (forHeader)


State 263

   46 for: FOR '(' forHeader ')' block •

    $default  reduce using rule 46 (for)


State 264

   55 foreach: FOREACH '(' typequalifier type IDENTIFIER • ':' IDENTIFIER ')' block

    ':'  shift, and go to state 274


State 265

   54 foreach: FOREACH '(' type IDENTIFIER ':' • IDENTIFIER ')' block

    IDENTIFIER  shift, and go to state 275


State 266

   56 match: MATCH '(' expr ')' '{' • matchCases '}'
   57      | MATCH '(' expr ')' '{' • matchCases ',' '}'

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    '_'              shift, and go to state 276

    matchCases         go to state 277
    matchCase          go to state 278
    matchLeft          go to state 279
    multipleMatchLeft  go to state 280
    literal            go to state 281


State 267

  127 expr: CAST '<' type '>' '(' expr ')' •

    $default  reduce using rule 127 (expr)


State 268

  148 compoundTypeFields: type ':' expr ',' compoundTypeFields •

    $default  reduce using rule 148 (compoundTypeFields)


State 269

   71 if: IF '(' expr ')' block ELSE • block
   75 elseif: ELSE • IF '(' expr ')' block

    IF   shift, and go to state 282
    '{'  shift, and go to state 102

    block  go to state 283


State 270

   70 if: IF '(' expr ')' block elseifs •
   72   | IF '(' expr ')' block elseifs • ELSE block
   74 elseifs: elseifs • elseif

    ELSE  shift, and go to state 284

    $default  reduce using rule 70 (if)

    elseif  go to state 285


State 271

   73 elseifs: elseif •

    $default  reduce using rule 73 (elseifs)


State 272

   49 forHeader: ';' expr ';' statement •

    $default  reduce using rule 49 (forHeader)


State 273

   52 forHeader: statement ';' expr ';' •

    $default  reduce using rule 52 (forHeader)


State 274

   55 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' • IDENTIFIER ')' block

    IDENTIFIER  shift, and go to state 286


State 275

   54 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER • ')' block

    ')'  shift, and go to state 287


State 276

   62 matchLeft: '_' •

    $default  reduce using rule 62 (matchLeft)


State 277

   56 match: MATCH '(' expr ')' '{' matchCases • '}'
   57      | MATCH '(' expr ')' '{' matchCases • ',' '}'
   59 matchCases: matchCases • ',' matchCase

    '}'  shift, and go to state 288
    ','  shift, and go to state 289


State 278

   58 matchCases: matchCase •

    $default  reduce using rule 58 (matchCases)


State 279

   60 matchCase: matchLeft • EQUALS_ARROW matchRight

    EQUALS_ARROW  shift, and go to state 290


State 280

   61 matchLeft: multipleMatchLeft •
   64 multipleMatchLeft: multipleMatchLeft • '|' literal

    '|'  shift, and go to state 291

    $default  reduce using rule 61 (matchLeft)


State 281

   63 multipleMatchLeft: literal •

    $default  reduce using rule 63 (multipleMatchLeft)


State 282

   75 elseif: ELSE IF • '(' expr ')' block

    '('  shift, and go to state 292


State 283

   71 if: IF '(' expr ')' block ELSE block •

    $default  reduce using rule 71 (if)


State 284

   72 if: IF '(' expr ')' block elseifs ELSE • block
   75 elseif: ELSE • IF '(' expr ')' block

    IF   shift, and go to state 282
    '{'  shift, and go to state 102

    block  go to state 293


State 285

   74 elseifs: elseifs elseif •

    $default  reduce using rule 74 (elseifs)


State 286

   55 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER • ')' block

    ')'  shift, and go to state 294


State 287

   54 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' • block

    '{'  shift, and go to state 102

    block  go to state 295


State 288

   56 match: MATCH '(' expr ')' '{' matchCases '}' •

    $default  reduce using rule 56 (match)


State 289

   57 match: MATCH '(' expr ')' '{' matchCases ',' • '}'
   59 matchCases: matchCases ',' • matchCase

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    '}'              shift, and go to state 296
    '_'              shift, and go to state 276

    matchCase          go to state 297
    matchLeft          go to state 279
    multipleMatchLeft  go to state 280
    literal            go to state 281


State 290

   60 matchCase: matchLeft EQUALS_ARROW • matchRight

    IF          shift, and go to state 146
    WHILE       shift, and go to state 147
    FOR         shift, and go to state 148
    FOREACH     shift, and go to state 149
    RETURN      shift, and go to state 150
    BREAK       shift, and go to state 151
    CONTINUE    shift, and go to state 152
    MATCH       shift, and go to state 153
    CONST       shift, and go to state 6
    STATIC      shift, and go to state 7
    USIZE       shift, and go to state 8
    U8          shift, and go to state 9
    U16         shift, and go to state 10
    U32         shift, and go to state 11
    U64         shift, and go to state 12
    I8          shift, and go to state 13
    I16         shift, and go to state 14
    I32         shift, and go to state 15
    I64         shift, and go to state 16
    F32         shift, and go to state 17
    F64         shift, and go to state 18
    BOOL        shift, and go to state 19
    STRING      shift, and go to state 20
    CHAR        shift, and go to state 21
    DELETE      shift, and go to state 154
    PRINT       shift, and go to state 155
    IDENTIFIER  shift, and go to state 156
    '{'         shift, and go to state 102

    varDecl         go to state 158
    statement       go to state 298
    assignment      go to state 161
    while           go to state 162
    for             go to state 163
    foreach         go to state 164
    match           go to state 165
    matchRight      go to state 299
    return          go to state 166
    if              go to state 167
    typequalifiers  go to state 34
    typequalifier   go to state 35
    type            go to state 36
    subprogramCall  go to state 168
    block           go to state 300


State 291

   64 multipleMatchLeft: multipleMatchLeft '|' • literal

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79

    literal  go to state 301


State 292

   75 elseif: ELSE IF '(' • expr ')' block

    INT_LITERAL      shift, and go to state 75
    FLOAT_LITERAL    shift, and go to state 76
    STRING_LITERAL   shift, and go to state 77
    CHAR_LITERAL     shift, and go to state 78
    BOOLEAN_LITERAL  shift, and go to state 79
    USIZE            shift, and go to state 8
    U8               shift, and go to state 9
    U16              shift, and go to state 10
    U32              shift, and go to state 11
    U64              shift, and go to state 12
    I8               shift, and go to state 13
    I16              shift, and go to state 14
    I32              shift, and go to state 15
    I64              shift, and go to state 16
    F32              shift, and go to state 17
    F64              shift, and go to state 18
    BOOL             shift, and go to state 19
    STRING           shift, and go to state 20
    CHAR             shift, and go to state 21
    NOT              shift, and go to state 80
    NEW              shift, and go to state 81
    CAST             shift, and go to state 82
    PLUS             shift, and go to state 83
    MINUS            shift, and go to state 84
    AMPERSAND        shift, and go to state 85
    HASHTAG          shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    '('              shift, and go to state 88
    '['              shift, and go to state 89

    type             go to state 90
    primary          go to state 91
    literal          go to state 92
    expr             go to state 302
    subprogramCall   go to state 94
    arrayDef         go to state 95
    enumDef          go to state 96
    compoundTypeDef  go to state 97


State 293

   72 if: IF '(' expr ')' block elseifs ELSE block •

    $default  reduce using rule 72 (if)


State 294

   55 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' • block

    '{'  shift, and go to state 102

    block  go to state 303


State 295

   54 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' block •

    $default  reduce using rule 54 (foreach)


State 296

   57 match: MATCH '(' expr ')' '{' matchCases ',' '}' •

    $default  reduce using rule 57 (match)


State 297

   59 matchCases: matchCases ',' matchCase •

    $default  reduce using rule 59 (matchCases)


State 298

   66 matchRight: statement •

    $default  reduce using rule 66 (matchRight)


State 299

   60 matchCase: matchLeft EQUALS_ARROW matchRight •

    $default  reduce using rule 60 (matchCase)


State 300

   65 matchRight: block •

    $default  reduce using rule 65 (matchRight)


State 301

   64 multipleMatchLeft: multipleMatchLeft '|' literal •

    $default  reduce using rule 64 (multipleMatchLeft)


State 302

   75 elseif: ELSE IF '(' expr • ')' block
  114 expr: expr • OR expr
  115     | expr • AND expr
  116     | expr • LESS_THAN expr
  117     | expr • MORE_THAN expr
  118     | expr • LESS_THAN_EQUALS expr
  119     | expr • MORE_THAN_EQUALS expr
  120     | expr • EQUALITY expr
  121     | expr • INEQUALITY expr
  122     | expr • PLUS expr
  123     | expr • MINUS expr
  124     | expr • ASTERISK expr
  125     | expr • SLASH expr
  126     | expr • PERCENTAGE expr

    AND               shift, and go to state 129
    OR                shift, and go to state 130
    EQUALITY          shift, and go to state 131
    INEQUALITY        shift, and go to state 132
    LESS_THAN_EQUALS  shift, and go to state 133
    MORE_THAN_EQUALS  shift, and go to state 134
    LESS_THAN         shift, and go to state 135
    MORE_THAN         shift, and go to state 136
    PLUS              shift, and go to state 137
    MINUS             shift, and go to state 138
    ASTERISK          shift, and go to state 139
    SLASH             shift, and go to state 140
    PERCENTAGE        shift, and go to state 141
    ')'               shift, and go to state 304


State 303

   55 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block •

    $default  reduce using rule 55 (foreach)


State 304

   75 elseif: ELSE IF '(' expr ')' • block

    '{'  shift, and go to state 102

    block  go to state 305


State 305

   75 elseif: ELSE IF '(' expr ')' block •

    $default  reduce using rule 75 (elseif)
