Nonterminals useless in grammar

    ids
    arrayIndex
    tupleDef
    fieldAccess


Terminals unused in grammar

    INCREMENT
    DECREMENT
    UDECREMENT
    UINCREMENT
    UASTERISK
    '.'


Rules useless in grammar

  156 ids: IDENTIFIER
  157    | ids ',' IDENTIFIER

  158 arrayIndex: arrayDef '[' expr ']'
  159           | IDENTIFIER '[' expr ']'

  160 tupleDef: LESS_THAN commaSeparatedExpr MORE_THAN

  161 fieldAccess: expr '.' IDENTIFIER
  162            | expr


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration
    3             | declaration declarations

    4 declaration: varDecl
    5            | typedef
    6            | proc
    7            | func
    8            | enum
    9            | union
   10            | struct
   11            | tuple

   12 varDecl: type IDENTIFIER ';'
   13        | type IDENTIFIER ASSIGN expr ';'
   14        | typequalifiers type IDENTIFIER ';'
   15        | typequalifiers type IDENTIFIER ASSIGN expr ';'

   16 typedef: TYPEDEF type IDENTIFIER ';'

   17 proc: PROC IDENTIFIER '(' ')' block
   18     | PROC IDENTIFIER '(' params ')' block

   19 func: FUNC IDENTIFIER '(' ')' ':' type block
   20     | FUNC IDENTIFIER '(' params ')' ':' type block

   21 enum: ENUM IDENTIFIER '{' enumValues '}'
   22     | ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}'

   23 enumValues: IDENTIFIER
   24           | IDENTIFIER ','
   25           | IDENTIFIER ASSIGN INT_LITERAL
   26           | IDENTIFIER ASSIGN INT_LITERAL ','
   27           | enumValues IDENTIFIER ASSIGN INT_LITERAL ','

   28 union: UNION IDENTIFIER '{' fields '}'

   29 struct: STRUCT IDENTIFIER '{' fields '}'
   30       | STRUCT IDENTIFIER LESS_THAN types MORE_THAN '{' fields '}'

   31 tuple: TUPLE IDENTIFIER '{' types '}'
   32      | TUPLE IDENTIFIER LESS_THAN types MORE_THAN '{' types '}'

   33 statements: statement
   34           | statements statement

   35 statement: varDecl
   36          | assignment
   37          | while
   38          | for
   39          | foreach
   40          | BREAK ';'
   41          | CONTINUE ';'
   42          | PRINT expr ';'
   43          | DELETE expr ';'
   44          | match
   45          | return
   46          | if

   47 assignment: IDENTIFIER ASSIGN expr ';'

   48 while: WHILE '(' expr ')' block

   49 for: FOR '(' forHeader ')' block

   50 forHeader: ';' ';'
   51          | statement expr statement
   52          | ';' expr ';' statement
   53          | ';' ';' statement
   54          | statement ';' ';'
   55          | statement ';' expr ';'
   56          | ';' expr ';'

   57 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' block
   58        | FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

   59 match: MATCH '(' expr ')' '{' matchCases '}'
   60      | MATCH '(' expr ')' '{' matchCases ',' '}'

   61 matchCases: matchCase
   62           | matchCases ',' matchCase

   63 matchCase: matchLeft EQUALS_ARROW matchRight

   64 matchLeft: multipleMatchLeft
   65          | '_'

   66 multipleMatchLeft: literal
   67                  | multipleMatchLeft '|' literal

   68 matchRight: block
   69           | statement

   70 return: RETURN ';'
   71       | RETURN expr ';'

   72 if: IF '(' expr ')' block
   73   | IF '(' expr ')' block elseifs
   74   | IF '(' expr ')' block ELSE block
   75   | IF '(' expr ')' block elseifs ELSE block

   76 elseifs: elseif
   77        | elseifs elseif

   78 elseif: ELSE IF '(' expr ')' block

   79 fields: field ';'
   80       | fields field ';'

   81 params: field
   82       | params ',' field

   83 field: type IDENTIFIER

   84 typequalifiers: typequalifier
   85               | typequalifiers typequalifier

   86 typequalifier: CONST
   87              | STATIC

   88 types: type
   89      | types ',' type

   90 type: USIZE
   91     | U8
   92     | U16
   93     | U32
   94     | U64
   95     | I8
   96     | I16
   97     | I32
   98     | I64
   99     | F32
  100     | F64
  101     | BOOL
  102     | STRING
  103     | CHAR
  104     | IDENTIFIER
  105     | type '[' ']'

  106 primary: IDENTIFIER
  107        | subprogramCall
  108        | NEW type
  109        | arrayDef
  110        | enumDef
  111        | compoundTypeDef

  112 literal: CHAR_LITERAL
  113        | STRING_LITERAL
  114        | FLOAT_LITERAL
  115        | INT_LITERAL
  116        | BOOLEAN_LITERAL

  117 expr: primary
  118     | literal
  119     | expr OR expr
  120     | expr AND expr
  121     | expr LESS_THAN expr
  122     | expr MORE_THAN expr
  123     | expr LESS_THAN_EQUALS expr
  124     | expr MORE_THAN_EQUALS expr
  125     | expr EQUALITY expr
  126     | expr INEQUALITY expr
  127     | expr PLUS expr
  128     | expr MINUS expr
  129     | expr ASTERISK expr
  130     | expr SLASH expr
  131     | expr PERCENTAGE expr
  132     | STATIC_CAST '<' type '>' '(' expr ')'
  133     | AMPERSAND expr
  134     | NOT expr
  135     | PLUS expr
  136     | MINUS expr
  137     | HASHTAG expr
  138     | '(' expr ')'

  139 subprogramCall: IDENTIFIER '(' ')'
  140               | IDENTIFIER '(' arguments ')'

  141 arguments: expr
  142          | arguments ',' expr

  143 arrayDef: '[' ']'
  144         | '[' commaSeparatedExpr ']'

  145 commaSeparatedExpr: expr
  146                   | expr ','
  147                   | expr ',' commaSeparatedExpr

  148 enumDef: IDENTIFIER DOUBLE_COLON IDENTIFIER

  149 compoundTypeDef: type '{' '}'
  150                | type '{' compoundTypeFields '}'

  151 compoundTypeFields: type ':' expr
  152                   | type ':' expr ','
  153                   | type ':' expr ',' compoundTypeFields

  154 block: '{' '}'
  155      | '{' statements '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17 18 19 20 48 49 57 58 59 60 72 73 74 75 78 132 138 139 140
    ')' (41) 17 18 19 20 48 49 57 58 59 60 72 73 74 75 78 132 138 139 140
    ',' (44) 24 26 27 60 62 82 89 142 146 147 152 153
    '.' (46)
    ':' (58) 19 20 57 58 151 152 153
    ';' (59) 12 13 14 15 16 40 41 42 43 47 50 52 53 54 55 56 70 71 79 80
    '<' (60) 132
    '>' (62) 132
    '[' (91) 105 143 144
    ']' (93) 105 143 144
    '_' (95) 65
    '{' (123) 21 22 28 29 30 31 32 59 60 149 150 154 155
    '|' (124) 67
    '}' (125) 21 22 28 29 30 31 32 59 60 149 150 154 155
    error (256)
    INT_LITERAL <iValue> (258) 25 26 27 115
    FLOAT_LITERAL <fValue> (259) 114
    STRING_LITERAL <sValue> (260) 113
    CHAR_LITERAL <cValue> (261) 112
    BOOLEAN_LITERAL <iValue> (262) 116
    IF (263) 72 73 74 75 78
    ELSE (264) 74 75 78
    WHILE (265) 48
    FOR (266) 49
    FOREACH (267) 57 58
    FUNC (268) 19 20
    PROC (269) 17 18
    RETURN (270) 70 71
    BREAK (271) 40
    CONTINUE (272) 41
    MATCH (273) 59 60
    ENUM (274) 21 22
    UNION (275) 28
    STRUCT (276) 29 30
    TUPLE (277) 31 32
    CONST (278) 86
    STATIC (279) 87
    USIZE (280) 90
    U8 (281) 91
    U16 (282) 92
    U32 (283) 93
    U64 (284) 94
    I8 (285) 95
    I16 (286) 96
    I32 (287) 97
    I64 (288) 98
    F32 (289) 99
    F64 (290) 100
    BOOL (291) 101
    STRING (292) 102
    CHAR (293) 103
    TYPEDEF (294) 16
    NOT (295) 134
    AND (296) 120
    OR (297) 119
    NEW (298) 108
    DELETE (299) 43
    PRINT (300) 42
    STATIC_CAST (301) 132
    EQUALITY (302) 125
    INEQUALITY (303) 126
    ASSIGN (304) 13 15 25 26 27 47
    LESS_THAN_EQUALS (305) 123
    MORE_THAN_EQUALS (306) 124
    LESS_THAN (307) 22 30 32 121
    MORE_THAN (308) 22 30 32 122
    PLUS (309) 127 135
    MINUS (310) 128 136
    ASTERISK (311) 129
    SLASH (312) 130
    INCREMENT (313)
    DECREMENT (314)
    DOUBLE_COLON (315) 148
    EQUALS_ARROW (316) 63
    AMPERSAND (317) 133
    HASHTAG (318) 137
    PERCENTAGE (319) 131
    IDENTIFIER <sValue> (320) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 47 57 58 83 104 106 139 140 148
    ULITERAL (321)
    UPRIMARY (322)
    UHASHTAG (323)
    UMINUS (324)
    UPLUS (325)
    UDECREMENT (326)
    UINCREMENT (327)
    UNOT (328)
    UASTERISK (329)
    UAMPERSAND (330)
    UTYPE (331)
    UPARENTESISEXPR (332)


Nonterminals, with rules where they appear

    $accept (92)
        on left: 0
    program (93)
        on left: 1
        on right: 0
    declarations (94)
        on left: 2 3
        on right: 1 3
    declaration (95)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3
    varDecl (96)
        on left: 12 13 14 15
        on right: 4 35
    typedef (97)
        on left: 16
        on right: 5
    proc (98)
        on left: 17 18
        on right: 6
    func (99)
        on left: 19 20
        on right: 7
    enum (100)
        on left: 21 22
        on right: 8
    enumValues (101)
        on left: 23 24 25 26 27
        on right: 21 22 27
    union (102)
        on left: 28
        on right: 9
    struct (103)
        on left: 29 30
        on right: 10
    tuple (104)
        on left: 31 32
        on right: 11
    statements (105)
        on left: 33 34
        on right: 34 155
    statement (106)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 33 34 51 52 53 54 55 69
    assignment (107)
        on left: 47
        on right: 36
    while (108)
        on left: 48
        on right: 37
    for (109)
        on left: 49
        on right: 38
    forHeader (110)
        on left: 50 51 52 53 54 55 56
        on right: 49
    foreach (111)
        on left: 57 58
        on right: 39
    match (112)
        on left: 59 60
        on right: 44
    matchCases (113)
        on left: 61 62
        on right: 59 60 62
    matchCase (114)
        on left: 63
        on right: 61 62
    matchLeft (115)
        on left: 64 65
        on right: 63
    multipleMatchLeft (116)
        on left: 66 67
        on right: 64 67
    matchRight (117)
        on left: 68 69
        on right: 63
    return (118)
        on left: 70 71
        on right: 45
    if (119)
        on left: 72 73 74 75
        on right: 46
    elseifs (120)
        on left: 76 77
        on right: 73 75 77
    elseif (121)
        on left: 78
        on right: 76 77
    fields (122)
        on left: 79 80
        on right: 28 29 30 80
    params (123)
        on left: 81 82
        on right: 18 20 82
    field (124)
        on left: 83
        on right: 79 80 81 82
    typequalifiers (125)
        on left: 84 85
        on right: 14 15 85
    typequalifier (126)
        on left: 86 87
        on right: 58 84 85
    types (127)
        on left: 88 89
        on right: 30 31 32 89
    type (128)
        on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
        on right: 12 13 14 15 16 19 20 22 57 58 83 88 89 105 108 132 149 150 151 152 153
    primary (129)
        on left: 106 107 108 109 110 111
        on right: 117
    literal (130)
        on left: 112 113 114 115 116
        on right: 66 67 118
    expr (131)
        on left: 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138
        on right: 13 15 42 43 47 48 51 52 55 56 59 60 71 72 73 74 75 78 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 141 142 145 146 147 151 152 153
    subprogramCall (132)
        on left: 139 140
        on right: 107
    arguments (133)
        on left: 141 142
        on right: 140 142
    arrayDef (134)
        on left: 143 144
        on right: 109
    commaSeparatedExpr (135)
        on left: 145 146 147
        on right: 144 147
    enumDef (136)
        on left: 148
        on right: 110
    compoundTypeDef (137)
        on left: 149 150
        on right: 111
    compoundTypeFields (138)
        on left: 151 152 153
        on right: 150 153
    block (139)
        on left: 154 155
        on right: 17 18 19 20 48 49 57 58 68 72 73 74 75 78


State 0

    0 $accept: • program $end

    FUNC        shift, and go to state 1
    PROC        shift, and go to state 2
    ENUM        shift, and go to state 3
    UNION       shift, and go to state 4
    STRUCT      shift, and go to state 5
    TUPLE       shift, and go to state 6
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    TYPEDEF     shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    program         go to state 25
    declarations    go to state 26
    declaration     go to state 27
    varDecl         go to state 28
    typedef         go to state 29
    proc            go to state 30
    func            go to state 31
    enum            go to state 32
    union           go to state 33
    struct          go to state 34
    tuple           go to state 35
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 1

   19 func: FUNC • IDENTIFIER '(' ')' ':' type block
   20     | FUNC • IDENTIFIER '(' params ')' ':' type block

    IDENTIFIER  shift, and go to state 39


State 2

   17 proc: PROC • IDENTIFIER '(' ')' block
   18     | PROC • IDENTIFIER '(' params ')' block

    IDENTIFIER  shift, and go to state 40


State 3

   21 enum: ENUM • IDENTIFIER '{' enumValues '}'
   22     | ENUM • IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}'

    IDENTIFIER  shift, and go to state 41


State 4

   28 union: UNION • IDENTIFIER '{' fields '}'

    IDENTIFIER  shift, and go to state 42


State 5

   29 struct: STRUCT • IDENTIFIER '{' fields '}'
   30       | STRUCT • IDENTIFIER LESS_THAN types MORE_THAN '{' fields '}'

    IDENTIFIER  shift, and go to state 43


State 6

   31 tuple: TUPLE • IDENTIFIER '{' types '}'
   32      | TUPLE • IDENTIFIER LESS_THAN types MORE_THAN '{' types '}'

    IDENTIFIER  shift, and go to state 44


State 7

   86 typequalifier: CONST •

    $default  reduce using rule 86 (typequalifier)


State 8

   87 typequalifier: STATIC •

    $default  reduce using rule 87 (typequalifier)


State 9

   90 type: USIZE •

    $default  reduce using rule 90 (type)


State 10

   91 type: U8 •

    $default  reduce using rule 91 (type)


State 11

   92 type: U16 •

    $default  reduce using rule 92 (type)


State 12

   93 type: U32 •

    $default  reduce using rule 93 (type)


State 13

   94 type: U64 •

    $default  reduce using rule 94 (type)


State 14

   95 type: I8 •

    $default  reduce using rule 95 (type)


State 15

   96 type: I16 •

    $default  reduce using rule 96 (type)


State 16

   97 type: I32 •

    $default  reduce using rule 97 (type)


State 17

   98 type: I64 •

    $default  reduce using rule 98 (type)


State 18

   99 type: F32 •

    $default  reduce using rule 99 (type)


State 19

  100 type: F64 •

    $default  reduce using rule 100 (type)


State 20

  101 type: BOOL •

    $default  reduce using rule 101 (type)


State 21

  102 type: STRING •

    $default  reduce using rule 102 (type)


State 22

  103 type: CHAR •

    $default  reduce using rule 103 (type)


State 23

   16 typedef: TYPEDEF • type IDENTIFIER ';'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 45


State 24

  104 type: IDENTIFIER •

    $default  reduce using rule 104 (type)


State 25

    0 $accept: program • $end

    $end  shift, and go to state 46


State 26

    1 program: declarations •

    $default  reduce using rule 1 (program)


State 27

    2 declarations: declaration •
    3             | declaration • declarations

    FUNC        shift, and go to state 1
    PROC        shift, and go to state 2
    ENUM        shift, and go to state 3
    UNION       shift, and go to state 4
    STRUCT      shift, and go to state 5
    TUPLE       shift, and go to state 6
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    TYPEDEF     shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 2 (declarations)

    declarations    go to state 47
    declaration     go to state 27
    varDecl         go to state 28
    typedef         go to state 29
    proc            go to state 30
    func            go to state 31
    enum            go to state 32
    union           go to state 33
    struct          go to state 34
    tuple           go to state 35
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 28

    4 declaration: varDecl •

    $default  reduce using rule 4 (declaration)


State 29

    5 declaration: typedef •

    $default  reduce using rule 5 (declaration)


State 30

    6 declaration: proc •

    $default  reduce using rule 6 (declaration)


State 31

    7 declaration: func •

    $default  reduce using rule 7 (declaration)


State 32

    8 declaration: enum •

    $default  reduce using rule 8 (declaration)


State 33

    9 declaration: union •

    $default  reduce using rule 9 (declaration)


State 34

   10 declaration: struct •

    $default  reduce using rule 10 (declaration)


State 35

   11 declaration: tuple •

    $default  reduce using rule 11 (declaration)


State 36

   14 varDecl: typequalifiers • type IDENTIFIER ';'
   15        | typequalifiers • type IDENTIFIER ASSIGN expr ';'
   85 typequalifiers: typequalifiers • typequalifier

    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    typequalifier  go to state 48
    type           go to state 49


State 37

   84 typequalifiers: typequalifier •

    $default  reduce using rule 84 (typequalifiers)


State 38

   12 varDecl: type • IDENTIFIER ';'
   13        | type • IDENTIFIER ASSIGN expr ';'
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 50
    '['         shift, and go to state 51


State 39

   19 func: FUNC IDENTIFIER • '(' ')' ':' type block
   20     | FUNC IDENTIFIER • '(' params ')' ':' type block

    '('  shift, and go to state 52


State 40

   17 proc: PROC IDENTIFIER • '(' ')' block
   18     | PROC IDENTIFIER • '(' params ')' block

    '('  shift, and go to state 53


State 41

   21 enum: ENUM IDENTIFIER • '{' enumValues '}'
   22     | ENUM IDENTIFIER • LESS_THAN type MORE_THAN '{' enumValues '}'

    LESS_THAN  shift, and go to state 54
    '{'        shift, and go to state 55


State 42

   28 union: UNION IDENTIFIER • '{' fields '}'

    '{'  shift, and go to state 56


State 43

   29 struct: STRUCT IDENTIFIER • '{' fields '}'
   30       | STRUCT IDENTIFIER • LESS_THAN types MORE_THAN '{' fields '}'

    LESS_THAN  shift, and go to state 57
    '{'        shift, and go to state 58


State 44

   31 tuple: TUPLE IDENTIFIER • '{' types '}'
   32      | TUPLE IDENTIFIER • LESS_THAN types MORE_THAN '{' types '}'

    LESS_THAN  shift, and go to state 59
    '{'        shift, and go to state 60


State 45

   16 typedef: TYPEDEF type • IDENTIFIER ';'
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 61
    '['         shift, and go to state 51


State 46

    0 $accept: program $end •

    $default  accept


State 47

    3 declarations: declaration declarations •

    $default  reduce using rule 3 (declarations)


State 48

   85 typequalifiers: typequalifiers typequalifier •

    $default  reduce using rule 85 (typequalifiers)


State 49

   14 varDecl: typequalifiers type • IDENTIFIER ';'
   15        | typequalifiers type • IDENTIFIER ASSIGN expr ';'
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 62
    '['         shift, and go to state 51


State 50

   12 varDecl: type IDENTIFIER • ';'
   13        | type IDENTIFIER • ASSIGN expr ';'

    ASSIGN  shift, and go to state 63
    ';'     shift, and go to state 64


State 51

  105 type: type '[' • ']'

    ']'  shift, and go to state 65


State 52

   19 func: FUNC IDENTIFIER '(' • ')' ':' type block
   20     | FUNC IDENTIFIER '(' • params ')' ':' type block

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    ')'         shift, and go to state 66

    params  go to state 67
    field   go to state 68
    type    go to state 69


State 53

   17 proc: PROC IDENTIFIER '(' • ')' block
   18     | PROC IDENTIFIER '(' • params ')' block

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    ')'         shift, and go to state 70

    params  go to state 71
    field   go to state 68
    type    go to state 69


State 54

   22 enum: ENUM IDENTIFIER LESS_THAN • type MORE_THAN '{' enumValues '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 72


State 55

   21 enum: ENUM IDENTIFIER '{' • enumValues '}'

    IDENTIFIER  shift, and go to state 73

    enumValues  go to state 74


State 56

   28 union: UNION IDENTIFIER '{' • fields '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    fields  go to state 75
    field   go to state 76
    type    go to state 69


State 57

   30 struct: STRUCT IDENTIFIER LESS_THAN • types MORE_THAN '{' fields '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    types  go to state 77
    type   go to state 78


State 58

   29 struct: STRUCT IDENTIFIER '{' • fields '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    fields  go to state 79
    field   go to state 76
    type    go to state 69


State 59

   32 tuple: TUPLE IDENTIFIER LESS_THAN • types MORE_THAN '{' types '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    types  go to state 80
    type   go to state 78


State 60

   31 tuple: TUPLE IDENTIFIER '{' • types '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    types  go to state 81
    type   go to state 78


State 61

   16 typedef: TYPEDEF type IDENTIFIER • ';'

    ';'  shift, and go to state 82


State 62

   14 varDecl: typequalifiers type IDENTIFIER • ';'
   15        | typequalifiers type IDENTIFIER • ASSIGN expr ';'

    ASSIGN  shift, and go to state 83
    ';'     shift, and go to state 84


State 63

   13 varDecl: type IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 103
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 64

   12 varDecl: type IDENTIFIER ';' •

    $default  reduce using rule 12 (varDecl)


State 65

  105 type: type '[' ']' •

    $default  reduce using rule 105 (type)


State 66

   19 func: FUNC IDENTIFIER '(' ')' • ':' type block

    ':'  shift, and go to state 108


State 67

   20 func: FUNC IDENTIFIER '(' params • ')' ':' type block
   82 params: params • ',' field

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


State 68

   81 params: field •

    $default  reduce using rule 81 (params)


State 69

   83 field: type • IDENTIFIER
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 111
    '['         shift, and go to state 51


State 70

   17 proc: PROC IDENTIFIER '(' ')' • block

    '{'  shift, and go to state 112

    block  go to state 113


State 71

   18 proc: PROC IDENTIFIER '(' params • ')' block
   82 params: params • ',' field

    ')'  shift, and go to state 114
    ','  shift, and go to state 110


State 72

   22 enum: ENUM IDENTIFIER LESS_THAN type • MORE_THAN '{' enumValues '}'
  105 type: type • '[' ']'

    MORE_THAN  shift, and go to state 115
    '['        shift, and go to state 51


State 73

   23 enumValues: IDENTIFIER •
   24           | IDENTIFIER • ','
   25           | IDENTIFIER • ASSIGN INT_LITERAL
   26           | IDENTIFIER • ASSIGN INT_LITERAL ','

    ASSIGN  shift, and go to state 116
    ','     shift, and go to state 117

    $default  reduce using rule 23 (enumValues)


State 74

   21 enum: ENUM IDENTIFIER '{' enumValues • '}'
   27 enumValues: enumValues • IDENTIFIER ASSIGN INT_LITERAL ','

    IDENTIFIER  shift, and go to state 118
    '}'         shift, and go to state 119


State 75

   28 union: UNION IDENTIFIER '{' fields • '}'
   80 fields: fields • field ';'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    '}'         shift, and go to state 120

    field  go to state 121
    type   go to state 69


State 76

   79 fields: field • ';'

    ';'  shift, and go to state 122


State 77

   30 struct: STRUCT IDENTIFIER LESS_THAN types • MORE_THAN '{' fields '}'
   89 types: types • ',' type

    MORE_THAN  shift, and go to state 123
    ','        shift, and go to state 124


State 78

   88 types: type •
  105 type: type • '[' ']'

    '['  shift, and go to state 51

    $default  reduce using rule 88 (types)


State 79

   29 struct: STRUCT IDENTIFIER '{' fields • '}'
   80 fields: fields • field ';'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    '}'         shift, and go to state 125

    field  go to state 121
    type   go to state 69


State 80

   32 tuple: TUPLE IDENTIFIER LESS_THAN types • MORE_THAN '{' types '}'
   89 types: types • ',' type

    MORE_THAN  shift, and go to state 126
    ','        shift, and go to state 124


State 81

   31 tuple: TUPLE IDENTIFIER '{' types • '}'
   89 types: types • ',' type

    '}'  shift, and go to state 127
    ','  shift, and go to state 124


State 82

   16 typedef: TYPEDEF type IDENTIFIER ';' •

    $default  reduce using rule 16 (typedef)


State 83

   15 varDecl: typequalifiers type IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 128
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 84

   14 varDecl: typequalifiers type IDENTIFIER ';' •

    $default  reduce using rule 14 (varDecl)


State 85

  115 literal: INT_LITERAL •

    $default  reduce using rule 115 (literal)


State 86

  114 literal: FLOAT_LITERAL •

    $default  reduce using rule 114 (literal)


State 87

  113 literal: STRING_LITERAL •

    $default  reduce using rule 113 (literal)


State 88

  112 literal: CHAR_LITERAL •

    $default  reduce using rule 112 (literal)


State 89

  116 literal: BOOLEAN_LITERAL •

    $default  reduce using rule 116 (literal)


State 90

  134 expr: NOT • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 129
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 91

  108 primary: NEW • type

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 130


State 92

  132 expr: STATIC_CAST • '<' type '>' '(' expr ')'

    '<'  shift, and go to state 131


State 93

  135 expr: PLUS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 132
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 94

  136 expr: MINUS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 133
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 95

  133 expr: AMPERSAND • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 134
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 96

  137 expr: HASHTAG • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 135
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 97

  104 type: IDENTIFIER •
  106 primary: IDENTIFIER •
  139 subprogramCall: IDENTIFIER • '(' ')'
  140               | IDENTIFIER • '(' arguments ')'
  148 enumDef: IDENTIFIER • DOUBLE_COLON IDENTIFIER

    DOUBLE_COLON  shift, and go to state 136
    '('           shift, and go to state 137

    '{'       reduce using rule 104 (type)
    '['       reduce using rule 104 (type)
    $default  reduce using rule 106 (primary)


State 98

  138 expr: '(' • expr ')'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 138
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 99

  143 arrayDef: '[' • ']'
  144         | '[' • commaSeparatedExpr ']'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99
    ']'              shift, and go to state 139

    type                go to state 100
    primary             go to state 101
    literal             go to state 102
    expr                go to state 140
    subprogramCall      go to state 104
    arrayDef            go to state 105
    commaSeparatedExpr  go to state 141
    enumDef             go to state 106
    compoundTypeDef     go to state 107


State 100

  105 type: type • '[' ']'
  149 compoundTypeDef: type • '{' '}'
  150                | type • '{' compoundTypeFields '}'

    '{'  shift, and go to state 142
    '['  shift, and go to state 51


State 101

  117 expr: primary •

    $default  reduce using rule 117 (expr)


State 102

  118 expr: literal •

    $default  reduce using rule 118 (expr)


State 103

   13 varDecl: type IDENTIFIER ASSIGN expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 156


State 104

  107 primary: subprogramCall •

    $default  reduce using rule 107 (primary)


State 105

  109 primary: arrayDef •

    $default  reduce using rule 109 (primary)


State 106

  110 primary: enumDef •

    $default  reduce using rule 110 (primary)


State 107

  111 primary: compoundTypeDef •

    $default  reduce using rule 111 (primary)


State 108

   19 func: FUNC IDENTIFIER '(' ')' ':' • type block

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 157


State 109

   20 func: FUNC IDENTIFIER '(' params ')' • ':' type block

    ':'  shift, and go to state 158


State 110

   82 params: params ',' • field

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    field  go to state 159
    type   go to state 69


State 111

   83 field: type IDENTIFIER •

    $default  reduce using rule 83 (field)


State 112

  154 block: '{' • '}'
  155      | '{' • statements '}'

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170
    '}'         shift, and go to state 171

    varDecl         go to state 172
    statements      go to state 173
    statement       go to state 174
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 113

   17 proc: PROC IDENTIFIER '(' ')' block •

    $default  reduce using rule 17 (proc)


State 114

   18 proc: PROC IDENTIFIER '(' params ')' • block

    '{'  shift, and go to state 112

    block  go to state 182


State 115

   22 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN • '{' enumValues '}'

    '{'  shift, and go to state 183


State 116

   25 enumValues: IDENTIFIER ASSIGN • INT_LITERAL
   26           | IDENTIFIER ASSIGN • INT_LITERAL ','

    INT_LITERAL  shift, and go to state 184


State 117

   24 enumValues: IDENTIFIER ',' •

    $default  reduce using rule 24 (enumValues)


State 118

   27 enumValues: enumValues IDENTIFIER • ASSIGN INT_LITERAL ','

    ASSIGN  shift, and go to state 185


State 119

   21 enum: ENUM IDENTIFIER '{' enumValues '}' •

    $default  reduce using rule 21 (enum)


State 120

   28 union: UNION IDENTIFIER '{' fields '}' •

    $default  reduce using rule 28 (union)


State 121

   80 fields: fields field • ';'

    ';'  shift, and go to state 186


State 122

   79 fields: field ';' •

    $default  reduce using rule 79 (fields)


State 123

   30 struct: STRUCT IDENTIFIER LESS_THAN types MORE_THAN • '{' fields '}'

    '{'  shift, and go to state 187


State 124

   89 types: types ',' • type

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 188


State 125

   29 struct: STRUCT IDENTIFIER '{' fields '}' •

    $default  reduce using rule 29 (struct)


State 126

   32 tuple: TUPLE IDENTIFIER LESS_THAN types MORE_THAN • '{' types '}'

    '{'  shift, and go to state 189


State 127

   31 tuple: TUPLE IDENTIFIER '{' types '}' •

    $default  reduce using rule 31 (tuple)


State 128

   15 varDecl: typequalifiers type IDENTIFIER ASSIGN expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 190


State 129

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  134     | NOT expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 134 (expr)


State 130

  105 type: type • '[' ']'
  108 primary: NEW type •

    '['  shift, and go to state 51

    $default  reduce using rule 108 (primary)


State 131

  132 expr: STATIC_CAST '<' • type '>' '(' expr ')'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 191


State 132

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  135     | PLUS expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 135 (expr)


State 133

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  136     | MINUS expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 136 (expr)


State 134

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  133     | AMPERSAND expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 133 (expr)


State 135

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  137     | HASHTAG expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 137 (expr)


State 136

  148 enumDef: IDENTIFIER DOUBLE_COLON • IDENTIFIER

    IDENTIFIER  shift, and go to state 192


State 137

  139 subprogramCall: IDENTIFIER '(' • ')'
  140               | IDENTIFIER '(' • arguments ')'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    ')'              shift, and go to state 193
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 194
    subprogramCall   go to state 104
    arguments        go to state 195
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 138

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  138     | '(' expr • ')'

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 196


State 139

  143 arrayDef: '[' ']' •

    $default  reduce using rule 143 (arrayDef)


State 140

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  145 commaSeparatedExpr: expr •
  146                   | expr • ','
  147                   | expr • ',' commaSeparatedExpr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ','               shift, and go to state 197

    $default  reduce using rule 145 (commaSeparatedExpr)


State 141

  144 arrayDef: '[' commaSeparatedExpr • ']'

    ']'  shift, and go to state 198


State 142

  149 compoundTypeDef: type '{' • '}'
  150                | type '{' • compoundTypeFields '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    '}'         shift, and go to state 199

    type                go to state 200
    compoundTypeFields  go to state 201


State 143

  120 expr: expr AND • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 202
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 144

  119 expr: expr OR • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 203
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 145

  125 expr: expr EQUALITY • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 204
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 146

  126 expr: expr INEQUALITY • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 205
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 147

  123 expr: expr LESS_THAN_EQUALS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 206
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 148

  124 expr: expr MORE_THAN_EQUALS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 207
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 149

  121 expr: expr LESS_THAN • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 208
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 150

  122 expr: expr MORE_THAN • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 209
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 151

  127 expr: expr PLUS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 210
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 152

  128 expr: expr MINUS • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 211
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 153

  129 expr: expr ASTERISK • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 212
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 154

  130 expr: expr SLASH • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 213
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 155

  131 expr: expr PERCENTAGE • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 214
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 156

   13 varDecl: type IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 13 (varDecl)


State 157

   19 func: FUNC IDENTIFIER '(' ')' ':' type • block
  105 type: type • '[' ']'

    '{'  shift, and go to state 112
    '['  shift, and go to state 51

    block  go to state 215


State 158

   20 func: FUNC IDENTIFIER '(' params ')' ':' • type block

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 216


State 159

   82 params: params ',' field •

    $default  reduce using rule 82 (params)


State 160

   72 if: IF • '(' expr ')' block
   73   | IF • '(' expr ')' block elseifs
   74   | IF • '(' expr ')' block ELSE block
   75   | IF • '(' expr ')' block elseifs ELSE block

    '('  shift, and go to state 217


State 161

   48 while: WHILE • '(' expr ')' block

    '('  shift, and go to state 218


State 162

   49 for: FOR • '(' forHeader ')' block

    '('  shift, and go to state 219


State 163

   57 foreach: FOREACH • '(' type IDENTIFIER ':' IDENTIFIER ')' block
   58        | FOREACH • '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

    '('  shift, and go to state 220


State 164

   70 return: RETURN • ';'
   71       | RETURN • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    ';'              shift, and go to state 221
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 222
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 165

   40 statement: BREAK • ';'

    ';'  shift, and go to state 223


State 166

   41 statement: CONTINUE • ';'

    ';'  shift, and go to state 224


State 167

   59 match: MATCH • '(' expr ')' '{' matchCases '}'
   60      | MATCH • '(' expr ')' '{' matchCases ',' '}'

    '('  shift, and go to state 225


State 168

   43 statement: DELETE • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 226
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 169

   42 statement: PRINT • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 227
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 170

   47 assignment: IDENTIFIER • ASSIGN expr ';'
  104 type: IDENTIFIER •

    ASSIGN  shift, and go to state 228

    $default  reduce using rule 104 (type)


State 171

  154 block: '{' '}' •

    $default  reduce using rule 154 (block)


State 172

   35 statement: varDecl •

    $default  reduce using rule 35 (statement)


State 173

   34 statements: statements • statement
  155 block: '{' statements • '}'

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170
    '}'         shift, and go to state 229

    varDecl         go to state 172
    statement       go to state 230
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 174

   33 statements: statement •

    $default  reduce using rule 33 (statements)


State 175

   36 statement: assignment •

    $default  reduce using rule 36 (statement)


State 176

   37 statement: while •

    $default  reduce using rule 37 (statement)


State 177

   38 statement: for •

    $default  reduce using rule 38 (statement)


State 178

   39 statement: foreach •

    $default  reduce using rule 39 (statement)


State 179

   44 statement: match •

    $default  reduce using rule 44 (statement)


State 180

   45 statement: return •

    $default  reduce using rule 45 (statement)


State 181

   46 statement: if •

    $default  reduce using rule 46 (statement)


State 182

   18 proc: PROC IDENTIFIER '(' params ')' block •

    $default  reduce using rule 18 (proc)


State 183

   22 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' • enumValues '}'

    IDENTIFIER  shift, and go to state 73

    enumValues  go to state 231


State 184

   25 enumValues: IDENTIFIER ASSIGN INT_LITERAL •
   26           | IDENTIFIER ASSIGN INT_LITERAL • ','

    ','  shift, and go to state 232

    $default  reduce using rule 25 (enumValues)


State 185

   27 enumValues: enumValues IDENTIFIER ASSIGN • INT_LITERAL ','

    INT_LITERAL  shift, and go to state 233


State 186

   80 fields: fields field ';' •

    $default  reduce using rule 80 (fields)


State 187

   30 struct: STRUCT IDENTIFIER LESS_THAN types MORE_THAN '{' • fields '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    fields  go to state 234
    field   go to state 76
    type    go to state 69


State 188

   89 types: types ',' type •
  105 type: type • '[' ']'

    '['  shift, and go to state 51

    $default  reduce using rule 89 (types)


State 189

   32 tuple: TUPLE IDENTIFIER LESS_THAN types MORE_THAN '{' • types '}'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    types  go to state 235
    type   go to state 78


State 190

   15 varDecl: typequalifiers type IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 15 (varDecl)


State 191

  105 type: type • '[' ']'
  132 expr: STATIC_CAST '<' type • '>' '(' expr ')'

    '['  shift, and go to state 51
    '>'  shift, and go to state 236


State 192

  148 enumDef: IDENTIFIER DOUBLE_COLON IDENTIFIER •

    $default  reduce using rule 148 (enumDef)


State 193

  139 subprogramCall: IDENTIFIER '(' ')' •

    $default  reduce using rule 139 (subprogramCall)


State 194

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  141 arguments: expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 141 (arguments)


State 195

  140 subprogramCall: IDENTIFIER '(' arguments • ')'
  142 arguments: arguments • ',' expr

    ')'  shift, and go to state 237
    ','  shift, and go to state 238


State 196

  138 expr: '(' expr ')' •

    $default  reduce using rule 138 (expr)


State 197

  146 commaSeparatedExpr: expr ',' •
  147                   | expr ',' • commaSeparatedExpr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    $default  reduce using rule 146 (commaSeparatedExpr)

    type                go to state 100
    primary             go to state 101
    literal             go to state 102
    expr                go to state 140
    subprogramCall      go to state 104
    arrayDef            go to state 105
    commaSeparatedExpr  go to state 239
    enumDef             go to state 106
    compoundTypeDef     go to state 107


State 198

  144 arrayDef: '[' commaSeparatedExpr ']' •

    $default  reduce using rule 144 (arrayDef)


State 199

  149 compoundTypeDef: type '{' '}' •

    $default  reduce using rule 149 (compoundTypeDef)


State 200

  105 type: type • '[' ']'
  151 compoundTypeFields: type • ':' expr
  152                   | type • ':' expr ','
  153                   | type • ':' expr ',' compoundTypeFields

    ':'  shift, and go to state 240
    '['  shift, and go to state 51


State 201

  150 compoundTypeDef: type '{' compoundTypeFields • '}'

    '}'  shift, and go to state 241


State 202

  119 expr: expr • OR expr
  120     | expr • AND expr
  120     | expr AND expr •
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    OR  shift, and go to state 144

    $default  reduce using rule 120 (expr)


State 203

  119 expr: expr • OR expr
  119     | expr OR expr •
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    $default  reduce using rule 119 (expr)


State 204

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  125     | expr EQUALITY expr •
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150

    $default  reduce using rule 125 (expr)


State 205

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  126     | expr INEQUALITY expr •
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150

    $default  reduce using rule 126 (expr)


State 206

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  123     | expr LESS_THAN_EQUALS expr •
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND  shift, and go to state 143
    OR   shift, and go to state 144

    $default  reduce using rule 123 (expr)


State 207

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  124     | expr MORE_THAN_EQUALS expr •
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND  shift, and go to state 143
    OR   shift, and go to state 144

    $default  reduce using rule 124 (expr)


State 208

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  121     | expr LESS_THAN expr •
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND  shift, and go to state 143
    OR   shift, and go to state 144

    $default  reduce using rule 121 (expr)


State 209

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  122     | expr MORE_THAN expr •
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND  shift, and go to state 143
    OR   shift, and go to state 144

    $default  reduce using rule 122 (expr)


State 210

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  127     | expr PLUS expr •
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150

    $default  reduce using rule 127 (expr)


State 211

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  128     | expr MINUS expr •
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150

    $default  reduce using rule 128 (expr)


State 212

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  129     | expr ASTERISK expr •
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152

    $default  reduce using rule 129 (expr)


State 213

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  130     | expr SLASH expr •
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152

    $default  reduce using rule 130 (expr)


State 214

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  131     | expr PERCENTAGE expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152

    $default  reduce using rule 131 (expr)


State 215

   19 func: FUNC IDENTIFIER '(' ')' ':' type block •

    $default  reduce using rule 19 (func)


State 216

   20 func: FUNC IDENTIFIER '(' params ')' ':' type • block
  105 type: type • '[' ']'

    '{'  shift, and go to state 112
    '['  shift, and go to state 51

    block  go to state 242


State 217

   72 if: IF '(' • expr ')' block
   73   | IF '(' • expr ')' block elseifs
   74   | IF '(' • expr ')' block ELSE block
   75   | IF '(' • expr ')' block elseifs ELSE block

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 243
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 218

   48 while: WHILE '(' • expr ')' block

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 244
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 219

   49 for: FOR '(' • forHeader ')' block

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170
    ';'         shift, and go to state 245

    varDecl         go to state 172
    statement       go to state 246
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    forHeader       go to state 247
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 220

   57 foreach: FOREACH '(' • type IDENTIFIER ':' IDENTIFIER ')' block
   58        | FOREACH '(' • typequalifier type IDENTIFIER ':' IDENTIFIER ')' block

    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    typequalifier  go to state 248
    type           go to state 249


State 221

   70 return: RETURN ';' •

    $default  reduce using rule 70 (return)


State 222

   71 return: RETURN expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 250


State 223

   40 statement: BREAK ';' •

    $default  reduce using rule 40 (statement)


State 224

   41 statement: CONTINUE ';' •

    $default  reduce using rule 41 (statement)


State 225

   59 match: MATCH '(' • expr ')' '{' matchCases '}'
   60      | MATCH '(' • expr ')' '{' matchCases ',' '}'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 251
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 226

   43 statement: DELETE expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 252


State 227

   42 statement: PRINT expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 253


State 228

   47 assignment: IDENTIFIER ASSIGN • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 254
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 229

  155 block: '{' statements '}' •

    $default  reduce using rule 155 (block)


State 230

   34 statements: statements statement •

    $default  reduce using rule 34 (statements)


State 231

   22 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues • '}'
   27 enumValues: enumValues • IDENTIFIER ASSIGN INT_LITERAL ','

    IDENTIFIER  shift, and go to state 118
    '}'         shift, and go to state 255


State 232

   26 enumValues: IDENTIFIER ASSIGN INT_LITERAL ',' •

    $default  reduce using rule 26 (enumValues)


State 233

   27 enumValues: enumValues IDENTIFIER ASSIGN INT_LITERAL • ','

    ','  shift, and go to state 256


State 234

   30 struct: STRUCT IDENTIFIER LESS_THAN types MORE_THAN '{' fields • '}'
   80 fields: fields • field ';'

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24
    '}'         shift, and go to state 257

    field  go to state 121
    type   go to state 69


State 235

   32 tuple: TUPLE IDENTIFIER LESS_THAN types MORE_THAN '{' types • '}'
   89 types: types • ',' type

    '}'  shift, and go to state 258
    ','  shift, and go to state 124


State 236

  132 expr: STATIC_CAST '<' type '>' • '(' expr ')'

    '('  shift, and go to state 259


State 237

  140 subprogramCall: IDENTIFIER '(' arguments ')' •

    $default  reduce using rule 140 (subprogramCall)


State 238

  142 arguments: arguments ',' • expr

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 260
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 239

  147 commaSeparatedExpr: expr ',' commaSeparatedExpr •

    $default  reduce using rule 147 (commaSeparatedExpr)


State 240

  151 compoundTypeFields: type ':' • expr
  152                   | type ':' • expr ','
  153                   | type ':' • expr ',' compoundTypeFields

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 261
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 241

  150 compoundTypeDef: type '{' compoundTypeFields '}' •

    $default  reduce using rule 150 (compoundTypeDef)


State 242

   20 func: FUNC IDENTIFIER '(' params ')' ':' type block •

    $default  reduce using rule 20 (func)


State 243

   72 if: IF '(' expr • ')' block
   73   | IF '(' expr • ')' block elseifs
   74   | IF '(' expr • ')' block ELSE block
   75   | IF '(' expr • ')' block elseifs ELSE block
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 262


State 244

   48 while: WHILE '(' expr • ')' block
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 263


State 245

   50 forHeader: ';' • ';'
   52          | ';' • expr ';' statement
   53          | ';' • ';' statement
   56          | ';' • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    ';'              shift, and go to state 264
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 265
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 246

   51 forHeader: statement • expr statement
   54          | statement • ';' ';'
   55          | statement • ';' expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    ';'              shift, and go to state 266
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 267
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 247

   49 for: FOR '(' forHeader • ')' block

    ')'  shift, and go to state 268


State 248

   58 foreach: FOREACH '(' typequalifier • type IDENTIFIER ':' IDENTIFIER ')' block

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    type  go to state 269


State 249

   57 foreach: FOREACH '(' type • IDENTIFIER ':' IDENTIFIER ')' block
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 270
    '['         shift, and go to state 51


State 250

   71 return: RETURN expr ';' •

    $default  reduce using rule 71 (return)


State 251

   59 match: MATCH '(' expr • ')' '{' matchCases '}'
   60      | MATCH '(' expr • ')' '{' matchCases ',' '}'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 271


State 252

   43 statement: DELETE expr ';' •

    $default  reduce using rule 43 (statement)


State 253

   42 statement: PRINT expr ';' •

    $default  reduce using rule 42 (statement)


State 254

   47 assignment: IDENTIFIER ASSIGN expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 272


State 255

   22 enum: ENUM IDENTIFIER LESS_THAN type MORE_THAN '{' enumValues '}' •

    $default  reduce using rule 22 (enum)


State 256

   27 enumValues: enumValues IDENTIFIER ASSIGN INT_LITERAL ',' •

    $default  reduce using rule 27 (enumValues)


State 257

   30 struct: STRUCT IDENTIFIER LESS_THAN types MORE_THAN '{' fields '}' •

    $default  reduce using rule 30 (struct)


State 258

   32 tuple: TUPLE IDENTIFIER LESS_THAN types MORE_THAN '{' types '}' •

    $default  reduce using rule 32 (tuple)


State 259

  132 expr: STATIC_CAST '<' type '>' '(' • expr ')'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 273
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 260

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  142 arguments: arguments ',' expr •

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155

    $default  reduce using rule 142 (arguments)


State 261

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  151 compoundTypeFields: type ':' expr •
  152                   | type ':' expr • ','
  153                   | type ':' expr • ',' compoundTypeFields

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ','               shift, and go to state 274

    $default  reduce using rule 151 (compoundTypeFields)


State 262

   72 if: IF '(' expr ')' • block
   73   | IF '(' expr ')' • block elseifs
   74   | IF '(' expr ')' • block ELSE block
   75   | IF '(' expr ')' • block elseifs ELSE block

    '{'  shift, and go to state 112

    block  go to state 275


State 263

   48 while: WHILE '(' expr ')' • block

    '{'  shift, and go to state 112

    block  go to state 276


State 264

   50 forHeader: ';' ';' •
   53          | ';' ';' • statement

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170

    $default  reduce using rule 50 (forHeader)

    varDecl         go to state 172
    statement       go to state 277
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 265

   52 forHeader: ';' expr • ';' statement
   56          | ';' expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 278


State 266

   54 forHeader: statement ';' • ';'
   55          | statement ';' • expr ';'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    ';'              shift, and go to state 279
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 280
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 267

   51 forHeader: statement expr • statement
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    IF                shift, and go to state 160
    WHILE             shift, and go to state 161
    FOR               shift, and go to state 162
    FOREACH           shift, and go to state 163
    RETURN            shift, and go to state 164
    BREAK             shift, and go to state 165
    CONTINUE          shift, and go to state 166
    MATCH             shift, and go to state 167
    CONST             shift, and go to state 7
    STATIC            shift, and go to state 8
    USIZE             shift, and go to state 9
    U8                shift, and go to state 10
    U16               shift, and go to state 11
    U32               shift, and go to state 12
    U64               shift, and go to state 13
    I8                shift, and go to state 14
    I16               shift, and go to state 15
    I32               shift, and go to state 16
    I64               shift, and go to state 17
    F32               shift, and go to state 18
    F64               shift, and go to state 19
    BOOL              shift, and go to state 20
    STRING            shift, and go to state 21
    CHAR              shift, and go to state 22
    AND               shift, and go to state 143
    OR                shift, and go to state 144
    DELETE            shift, and go to state 168
    PRINT             shift, and go to state 169
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    IDENTIFIER        shift, and go to state 170

    varDecl         go to state 172
    statement       go to state 281
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 268

   49 for: FOR '(' forHeader ')' • block

    '{'  shift, and go to state 112

    block  go to state 282


State 269

   58 foreach: FOREACH '(' typequalifier type • IDENTIFIER ':' IDENTIFIER ')' block
  105 type: type • '[' ']'

    IDENTIFIER  shift, and go to state 283
    '['         shift, and go to state 51


State 270

   57 foreach: FOREACH '(' type IDENTIFIER • ':' IDENTIFIER ')' block

    ':'  shift, and go to state 284


State 271

   59 match: MATCH '(' expr ')' • '{' matchCases '}'
   60      | MATCH '(' expr ')' • '{' matchCases ',' '}'

    '{'  shift, and go to state 285


State 272

   47 assignment: IDENTIFIER ASSIGN expr ';' •

    $default  reduce using rule 47 (assignment)


State 273

  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr
  132     | STATIC_CAST '<' type '>' '(' expr • ')'

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 286


State 274

  152 compoundTypeFields: type ':' expr ',' •
  153                   | type ':' expr ',' • compoundTypeFields

    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 152 (compoundTypeFields)

    type                go to state 200
    compoundTypeFields  go to state 287


State 275

   72 if: IF '(' expr ')' block •
   73   | IF '(' expr ')' block • elseifs
   74   | IF '(' expr ')' block • ELSE block
   75   | IF '(' expr ')' block • elseifs ELSE block

    ELSE  shift, and go to state 288

    $default  reduce using rule 72 (if)

    elseifs  go to state 289
    elseif   go to state 290


State 276

   48 while: WHILE '(' expr ')' block •

    $default  reduce using rule 48 (while)


State 277

   53 forHeader: ';' ';' statement •

    $default  reduce using rule 53 (forHeader)


State 278

   52 forHeader: ';' expr ';' • statement
   56          | ';' expr ';' •

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170

    $default  reduce using rule 56 (forHeader)

    varDecl         go to state 172
    statement       go to state 291
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38


State 279

   54 forHeader: statement ';' ';' •

    $default  reduce using rule 54 (forHeader)


State 280

   55 forHeader: statement ';' expr • ';'
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ';'               shift, and go to state 292


State 281

   51 forHeader: statement expr statement •

    $default  reduce using rule 51 (forHeader)


State 282

   49 for: FOR '(' forHeader ')' block •

    $default  reduce using rule 49 (for)


State 283

   58 foreach: FOREACH '(' typequalifier type IDENTIFIER • ':' IDENTIFIER ')' block

    ':'  shift, and go to state 293


State 284

   57 foreach: FOREACH '(' type IDENTIFIER ':' • IDENTIFIER ')' block

    IDENTIFIER  shift, and go to state 294


State 285

   59 match: MATCH '(' expr ')' '{' • matchCases '}'
   60      | MATCH '(' expr ')' '{' • matchCases ',' '}'

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    '_'              shift, and go to state 295

    matchCases         go to state 296
    matchCase          go to state 297
    matchLeft          go to state 298
    multipleMatchLeft  go to state 299
    literal            go to state 300


State 286

  132 expr: STATIC_CAST '<' type '>' '(' expr ')' •

    $default  reduce using rule 132 (expr)


State 287

  153 compoundTypeFields: type ':' expr ',' compoundTypeFields •

    $default  reduce using rule 153 (compoundTypeFields)


State 288

   74 if: IF '(' expr ')' block ELSE • block
   78 elseif: ELSE • IF '(' expr ')' block

    IF   shift, and go to state 301
    '{'  shift, and go to state 112

    block  go to state 302


State 289

   73 if: IF '(' expr ')' block elseifs •
   75   | IF '(' expr ')' block elseifs • ELSE block
   77 elseifs: elseifs • elseif

    ELSE  shift, and go to state 303

    $default  reduce using rule 73 (if)

    elseif  go to state 304


State 290

   76 elseifs: elseif •

    $default  reduce using rule 76 (elseifs)


State 291

   52 forHeader: ';' expr ';' statement •

    $default  reduce using rule 52 (forHeader)


State 292

   55 forHeader: statement ';' expr ';' •

    $default  reduce using rule 55 (forHeader)


State 293

   58 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' • IDENTIFIER ')' block

    IDENTIFIER  shift, and go to state 305


State 294

   57 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER • ')' block

    ')'  shift, and go to state 306


State 295

   65 matchLeft: '_' •

    $default  reduce using rule 65 (matchLeft)


State 296

   59 match: MATCH '(' expr ')' '{' matchCases • '}'
   60      | MATCH '(' expr ')' '{' matchCases • ',' '}'
   62 matchCases: matchCases • ',' matchCase

    '}'  shift, and go to state 307
    ','  shift, and go to state 308


State 297

   61 matchCases: matchCase •

    $default  reduce using rule 61 (matchCases)


State 298

   63 matchCase: matchLeft • EQUALS_ARROW matchRight

    EQUALS_ARROW  shift, and go to state 309


State 299

   64 matchLeft: multipleMatchLeft •
   67 multipleMatchLeft: multipleMatchLeft • '|' literal

    '|'  shift, and go to state 310

    $default  reduce using rule 64 (matchLeft)


State 300

   66 multipleMatchLeft: literal •

    $default  reduce using rule 66 (multipleMatchLeft)


State 301

   78 elseif: ELSE IF • '(' expr ')' block

    '('  shift, and go to state 311


State 302

   74 if: IF '(' expr ')' block ELSE block •

    $default  reduce using rule 74 (if)


State 303

   75 if: IF '(' expr ')' block elseifs ELSE • block
   78 elseif: ELSE • IF '(' expr ')' block

    IF   shift, and go to state 301
    '{'  shift, and go to state 112

    block  go to state 312


State 304

   77 elseifs: elseifs elseif •

    $default  reduce using rule 77 (elseifs)


State 305

   58 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER • ')' block

    ')'  shift, and go to state 313


State 306

   57 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' • block

    '{'  shift, and go to state 112

    block  go to state 314


State 307

   59 match: MATCH '(' expr ')' '{' matchCases '}' •

    $default  reduce using rule 59 (match)


State 308

   60 match: MATCH '(' expr ')' '{' matchCases ',' • '}'
   62 matchCases: matchCases ',' • matchCase

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    '}'              shift, and go to state 315
    '_'              shift, and go to state 295

    matchCase          go to state 316
    matchLeft          go to state 298
    multipleMatchLeft  go to state 299
    literal            go to state 300


State 309

   63 matchCase: matchLeft EQUALS_ARROW • matchRight

    IF          shift, and go to state 160
    WHILE       shift, and go to state 161
    FOR         shift, and go to state 162
    FOREACH     shift, and go to state 163
    RETURN      shift, and go to state 164
    BREAK       shift, and go to state 165
    CONTINUE    shift, and go to state 166
    MATCH       shift, and go to state 167
    CONST       shift, and go to state 7
    STATIC      shift, and go to state 8
    USIZE       shift, and go to state 9
    U8          shift, and go to state 10
    U16         shift, and go to state 11
    U32         shift, and go to state 12
    U64         shift, and go to state 13
    I8          shift, and go to state 14
    I16         shift, and go to state 15
    I32         shift, and go to state 16
    I64         shift, and go to state 17
    F32         shift, and go to state 18
    F64         shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    CHAR        shift, and go to state 22
    DELETE      shift, and go to state 168
    PRINT       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170
    '{'         shift, and go to state 112

    varDecl         go to state 172
    statement       go to state 317
    assignment      go to state 175
    while           go to state 176
    for             go to state 177
    foreach         go to state 178
    match           go to state 179
    matchRight      go to state 318
    return          go to state 180
    if              go to state 181
    typequalifiers  go to state 36
    typequalifier   go to state 37
    type            go to state 38
    block           go to state 319


State 310

   67 multipleMatchLeft: multipleMatchLeft '|' • literal

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89

    literal  go to state 320


State 311

   78 elseif: ELSE IF '(' • expr ')' block

    INT_LITERAL      shift, and go to state 85
    FLOAT_LITERAL    shift, and go to state 86
    STRING_LITERAL   shift, and go to state 87
    CHAR_LITERAL     shift, and go to state 88
    BOOLEAN_LITERAL  shift, and go to state 89
    USIZE            shift, and go to state 9
    U8               shift, and go to state 10
    U16              shift, and go to state 11
    U32              shift, and go to state 12
    U64              shift, and go to state 13
    I8               shift, and go to state 14
    I16              shift, and go to state 15
    I32              shift, and go to state 16
    I64              shift, and go to state 17
    F32              shift, and go to state 18
    F64              shift, and go to state 19
    BOOL             shift, and go to state 20
    STRING           shift, and go to state 21
    CHAR             shift, and go to state 22
    NOT              shift, and go to state 90
    NEW              shift, and go to state 91
    STATIC_CAST      shift, and go to state 92
    PLUS             shift, and go to state 93
    MINUS            shift, and go to state 94
    AMPERSAND        shift, and go to state 95
    HASHTAG          shift, and go to state 96
    IDENTIFIER       shift, and go to state 97
    '('              shift, and go to state 98
    '['              shift, and go to state 99

    type             go to state 100
    primary          go to state 101
    literal          go to state 102
    expr             go to state 321
    subprogramCall   go to state 104
    arrayDef         go to state 105
    enumDef          go to state 106
    compoundTypeDef  go to state 107


State 312

   75 if: IF '(' expr ')' block elseifs ELSE block •

    $default  reduce using rule 75 (if)


State 313

   58 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' • block

    '{'  shift, and go to state 112

    block  go to state 322


State 314

   57 foreach: FOREACH '(' type IDENTIFIER ':' IDENTIFIER ')' block •

    $default  reduce using rule 57 (foreach)


State 315

   60 match: MATCH '(' expr ')' '{' matchCases ',' '}' •

    $default  reduce using rule 60 (match)


State 316

   62 matchCases: matchCases ',' matchCase •

    $default  reduce using rule 62 (matchCases)


State 317

   69 matchRight: statement •

    $default  reduce using rule 69 (matchRight)


State 318

   63 matchCase: matchLeft EQUALS_ARROW matchRight •

    $default  reduce using rule 63 (matchCase)


State 319

   68 matchRight: block •

    $default  reduce using rule 68 (matchRight)


State 320

   67 multipleMatchLeft: multipleMatchLeft '|' literal •

    $default  reduce using rule 67 (multipleMatchLeft)


State 321

   78 elseif: ELSE IF '(' expr • ')' block
  119 expr: expr • OR expr
  120     | expr • AND expr
  121     | expr • LESS_THAN expr
  122     | expr • MORE_THAN expr
  123     | expr • LESS_THAN_EQUALS expr
  124     | expr • MORE_THAN_EQUALS expr
  125     | expr • EQUALITY expr
  126     | expr • INEQUALITY expr
  127     | expr • PLUS expr
  128     | expr • MINUS expr
  129     | expr • ASTERISK expr
  130     | expr • SLASH expr
  131     | expr • PERCENTAGE expr

    AND               shift, and go to state 143
    OR                shift, and go to state 144
    EQUALITY          shift, and go to state 145
    INEQUALITY        shift, and go to state 146
    LESS_THAN_EQUALS  shift, and go to state 147
    MORE_THAN_EQUALS  shift, and go to state 148
    LESS_THAN         shift, and go to state 149
    MORE_THAN         shift, and go to state 150
    PLUS              shift, and go to state 151
    MINUS             shift, and go to state 152
    ASTERISK          shift, and go to state 153
    SLASH             shift, and go to state 154
    PERCENTAGE        shift, and go to state 155
    ')'               shift, and go to state 323


State 322

   58 foreach: FOREACH '(' typequalifier type IDENTIFIER ':' IDENTIFIER ')' block •

    $default  reduce using rule 58 (foreach)


State 323

   78 elseif: ELSE IF '(' expr ')' • block

    '{'  shift, and go to state 112

    block  go to state 324


State 324

   78 elseif: ELSE IF '(' expr ')' block •

    $default  reduce using rule 78 (elseif)
