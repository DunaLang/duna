typedef i16 myint;

// Struct v1
struct Pessoa {
  string nome;
  int idade;
}

// Struct v2
//struct Calculadora <T>{
//  T n1;
//  T n2;
//}

// Union
union yylval {
  i32 iValue;    
  f32 fValue;
  string sValue;
  char cValue;
}

// Proc v1
proc testeSintatico () {}

// Proc v2
proc testeComParam (i16 i) {
  i16 x = i;
}

proc testeComParams (i16 i, bool isTrue) {
  i16 x = i;
  if(true) {}
}

// Proc v3 - Templates
//proc testeTemplate <T, U>(T param1, U param2) {}

// Func v1
func main () : i8 {}

// Func v2
//func testeFuncTemplate <T>() : T {}

// Func v3
func equals(string msg, string msg2) : bool {}

// Func v4
//func soma <T>(T n1, T n2) : T {}

// Proc main
proc main() {
  // Declaração v1
  i16 num;
  bool a;
  // Declaração v2
  bool b = false;

  // Atribuição v1
  a = true;
  // Atribuição v2
  b = a;

  // Testando ponteiros e arrays
  i32* @ptr;
  i16[] arr;

  // Declaração v3
  static string msg;

  // Declaração v4
  const i16 idade = 23;

  // Multiqualifier declaração v4
  const static bool isOpen = false;

  // Testando typedef
  int maioridade = 18;

  // If v1
  if(true) {
    maioridade = 21;
  }

  // If v2
  if(false) {
    int yy = 2;
  } else if(true) {
    //
  }

  // If v3
  if(true) {
    //
  }
  else {
    b = false;
  }

  // If v4
  if(true) {
    //
  }
  else if (false) {
    b = false;
  }
  else if (false) {
    //
  }
  else {
    //
  }

  // While
  while(true) {}

  // Foreach v1
  foreach(i16 element2 : arr) {}

  // Foreach v2
  foreach(const i16 element : arr) {}
}
